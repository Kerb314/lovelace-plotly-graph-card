{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "ArrayBuffer": {
            "properties": {
                "__@toStringTag@910": {
                    "type": "string"
                },
                "byteLength": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ArrayBufferLike": {
            "anyOf": [
                {
                    "$ref": "#/definitions/ArrayBuffer"
                },
                {
                    "$ref": "#/definitions/SharedArrayBuffer"
                }
            ]
        },
        "AutoPeriodConfig": {
            "properties": {
                "0": {
                    "enum": [
                        "5minute",
                        "day",
                        "hour",
                        "month",
                        "week"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Function": {
            "properties": {
                "arguments": {},
                "caller": {
                    "$ref": "#/definitions/Function"
                },
                "length": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "prototype": {}
            },
            "type": "object"
        },
        "Partial<BoxPlotMarker>": {
            "properties": {
                "color": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "line": {
                    "$ref": "#/definitions/Partial<{color:Plotly.Color;width:number;outliercolor:Plotly.Color;outlierwidth:number;}>"
                },
                "opacity": {
                    "type": "number"
                },
                "outliercolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "size": {
                    "type": "number"
                },
                "symbol": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                }
            },
            "type": "object"
        },
        "Partial<Partial<Plotly.LayoutAxis>>": {
            "properties": {
                "anchor": {
                    "enum": [
                        "free",
                        "x",
                        "x10",
                        "x11",
                        "x2",
                        "x3",
                        "x4",
                        "x5",
                        "x6",
                        "x7",
                        "x8",
                        "x9",
                        "y",
                        "y10",
                        "y11",
                        "y2",
                        "y3",
                        "y4",
                        "y5",
                        "y6",
                        "y7",
                        "y8",
                        "y9"
                    ],
                    "type": "string"
                },
                "angle": {},
                "automargin": {
                    "type": "boolean"
                },
                "autorange": {
                    "enum": [
                        false,
                        "reversed",
                        true
                    ]
                },
                "autotick": {
                    "type": "boolean"
                },
                "calendar": {
                    "enum": [
                        "chinese",
                        "coptic",
                        "discworld",
                        "ethiopian",
                        "gregorian",
                        "hebrew",
                        "islamic",
                        "jalali",
                        "julian",
                        "mayan",
                        "nanakshahi",
                        "nepali",
                        "persian",
                        "taiwan",
                        "thai",
                        "ummalqura"
                    ],
                    "type": "string"
                },
                "categoryarray": {
                    "items": {},
                    "type": "array"
                },
                "categoryorder": {
                    "description": "Specifies the ordering logic for the case of categorical variables.\nBy default, plotly uses *trace*, which specifies the order that is present in the data supplied.\nSet `categoryorder` to *category ascending* or *category descending* if order should be determined by\nthe alphanumerical order of the category names.\nSet `categoryorder` to *array* to derive the ordering from the attribute `categoryarray`. If a category\nis not found in the `categoryarray` array, the sorting behavior for that attribute will be identical to\nthe *trace* mode. The unspecified categories will follow the categories in `categoryarray`.\nSet `categoryorder` to *total ascending* or *total descending* if order should be determined by the\nnumerical order of the values.\nSimilarly, the order can be determined by the min, max, sum, mean or median of all the values.",
                    "enum": [
                        "array",
                        "category ascending",
                        "category descending",
                        "max ascending",
                        "max descending",
                        "mean ascending",
                        "mean descending",
                        "median ascending",
                        "median descending",
                        "min ascending",
                        "min descending",
                        "sum ascending",
                        "sum descending",
                        "total ascending",
                        "total descending",
                        "trace"
                    ],
                    "type": "string"
                },
                "color": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ],
                    "description": "Sets default for all colors associated with this axis\nall at once: line, font, tick, and grid colors.\nGrid color is lightened by blending this with the plot background\nIndividual pieces can override this."
                },
                "constrain": {
                    "enum": [
                        "domain",
                        "range"
                    ],
                    "type": "string"
                },
                "constraintoward": {
                    "enum": [
                        "bottom",
                        "center",
                        "left",
                        "middle",
                        "right",
                        "top"
                    ],
                    "type": "string"
                },
                "direction": {
                    "enum": [
                        "clockwise",
                        "counterclockwise"
                    ],
                    "type": "string"
                },
                "dividercolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ],
                    "description": "Sets the color of the dividers\nOnly has an effect on *multicategory* axes."
                },
                "dividerwidth": {
                    "description": "Sets the width (in px) of the dividers\nOnly has an effect on *multicategory* axes.",
                    "type": "number"
                },
                "domain": {
                    "items": {
                        "type": "number"
                    },
                    "type": "array"
                },
                "dtick": {
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "exponentformat": {
                    "description": "Determines a formatting rule for the tick exponents.\nFor example, consider the number 1,000,000,000.\nIf `none`, it appears as *1,000,000,000*.\nIf `e`, *1e+9*.\nIf `E`, *1E+9*.\nIf `power`, *1x10^9* (with 9 in a super script).\nIf `SI`, *1G*.\nIf `B`, *1B*.",
                    "enum": [
                        "B",
                        "E",
                        "SI",
                        "e",
                        "none",
                        "power"
                    ],
                    "type": "string"
                },
                "fixedrange": {
                    "description": "Determines whether or not this axis is zoom-able.\nIf true, then zoom is disabled.",
                    "type": "boolean"
                },
                "gridcolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ],
                    "description": "Sets the color of the grid lines."
                },
                "griddash": {
                    "enum": [
                        "dash",
                        "dashdot",
                        "dot",
                        "longdash",
                        "longdashdot",
                        "solid"
                    ],
                    "type": "string"
                },
                "gridwidth": {
                    "description": "Sets the width (in px) of the grid lines.",
                    "type": "number"
                },
                "hoverformat": {
                    "description": "Sets the hover text formatting rule using d3 formatting mini-languages\nwhich are very similar to those in Python.\nFor numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format\nAnd for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format\nWe add one item to d3's date formatter: `%{n}f` for fractional seconds with n digits.\nFor example, `\"2016-10-13 09:15:23.456\"` with tickformat `\"%H~%M~%S.%2f\"` would display \"09~15~23.46\"",
                    "type": "string"
                },
                "layer": {
                    "enum": [
                        "above traces",
                        "below traces"
                    ],
                    "type": "string"
                },
                "linecolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ],
                    "description": "Sets the axis line color"
                },
                "linewidth": {
                    "description": "Sets the width (in px) of the axis line.",
                    "type": "number"
                },
                "mirror": {
                    "enum": [
                        "all",
                        "allticks",
                        false,
                        "ticks",
                        true
                    ]
                },
                "nticks": {
                    "type": "number"
                },
                "overlaying": {
                    "enum": [
                        "free",
                        "x",
                        "x10",
                        "x11",
                        "x2",
                        "x3",
                        "x4",
                        "x5",
                        "x6",
                        "x7",
                        "x8",
                        "x9",
                        "y",
                        "y10",
                        "y11",
                        "y2",
                        "y3",
                        "y4",
                        "y5",
                        "y6",
                        "y7",
                        "y8",
                        "y9"
                    ],
                    "type": "string"
                },
                "position": {
                    "type": "number"
                },
                "range": {
                    "items": {},
                    "type": "array"
                },
                "rangemode": {
                    "description": "'If *normal*, the range is computed in relation to the extrema\nof the input data.\nIf *tozero*`, the range extends to 0,\nregardless of the input data\nIf *nonnegative*, the range is non-negative,\nregardless of the input data.\nApplies only to linear axes.",
                    "enum": [
                        "nonnegative",
                        "normal",
                        "tozero"
                    ],
                    "type": "string"
                },
                "rangeselector": {
                    "$ref": "#/definitions/Partial<Plotly.RangeSelector>"
                },
                "rangeslider": {
                    "$ref": "#/definitions/Partial<Plotly.RangeSlider>"
                },
                "rotation": {
                    "type": "number"
                },
                "scaleanchor": {
                    "enum": [
                        "x",
                        "x10",
                        "x11",
                        "x2",
                        "x3",
                        "x4",
                        "x5",
                        "x6",
                        "x7",
                        "x8",
                        "x9",
                        "y",
                        "y10",
                        "y11",
                        "y2",
                        "y3",
                        "y4",
                        "y5",
                        "y6",
                        "y7",
                        "y8",
                        "y9"
                    ],
                    "type": "string"
                },
                "scaleratio": {
                    "type": "number"
                },
                "separatethousands": {
                    "description": "'If `true`, even 4-digit integers are separated",
                    "type": "boolean"
                },
                "showdividers": {
                    "description": "Determines whether or not a dividers are drawn\nbetween the category levels of this axis.\nOnly has an effect on *multicategory* axes.",
                    "type": "boolean"
                },
                "showexponent": {
                    "description": "If `all`, all exponents are shown besides their significands.\nIf `first`, only the exponent of the first tick is shown.\nIf `last`, only the exponent of the last tick is shown.\nIf `none`, no exponents appear.",
                    "enum": [
                        "all",
                        "first",
                        "last",
                        "none"
                    ],
                    "type": "string"
                },
                "showgrid": {
                    "description": "Determines whether or not grid lines are drawn.\nIf `true`, the grid lines are drawn at every tick mark.",
                    "type": "boolean"
                },
                "showline": {
                    "description": "Determines whether or not a line bounding this axis is drawn.",
                    "type": "boolean"
                },
                "showspikes": {
                    "type": "boolean"
                },
                "showticklabels": {
                    "type": "boolean"
                },
                "showtickprefix": {
                    "description": "If `all`, all tick labels are displayed with a prefix.\nIf `first`, only the first tick is displayed with a prefix.\nIf `last`, only the last tick is displayed with a suffix.\nIf `none`, tick prefixes are hidden.",
                    "enum": [
                        "all",
                        "first",
                        "last",
                        "none"
                    ],
                    "type": "string"
                },
                "showticksuffix": {
                    "description": "Same as `showtickprefix` but for tick suffixes.",
                    "enum": [
                        "all",
                        "first",
                        "last",
                        "none"
                    ],
                    "type": "string"
                },
                "side": {
                    "enum": [
                        "bottom",
                        "clockwise",
                        "counterclockwise",
                        "left",
                        "right",
                        "top"
                    ],
                    "type": "string"
                },
                "spikecolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "spikedash": {
                    "type": "string"
                },
                "spikemode": {
                    "description": "Determines the drawing mode for the spike line.\nIf `toaxis`, the line is drawn from the data point to the axis the\nseries is plotted on.\nIf `across`, the line is drawn across the entire plot area, and\nsupercedes *toaxis*.\nIf `marker`, then a marker dot is drawn on the axis the series is\nplotted on",
                    "enum": [
                        "across",
                        "across+marker",
                        "marker",
                        "toaxis",
                        "toaxis+across",
                        "toaxis+across+marker",
                        "toaxis+marker"
                    ],
                    "type": "string"
                },
                "spikesnap": {
                    "description": "Determines whether spikelines are stuck to the cursor or to the closest datapoints.",
                    "enum": [
                        "cursor",
                        "data",
                        "hovered data"
                    ],
                    "type": "string"
                },
                "spikethickness": {
                    "type": "number"
                },
                "tick0": {
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "tickangle": {
                    "anyOf": [
                        {
                            "const": "auto",
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "tickcolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "tickfont": {
                    "$ref": "#/definitions/Partial<Plotly.Font>"
                },
                "tickformat": {
                    "description": "Sets the tick label formatting rule using d3 formatting mini-languages\nwhich are very similar to those in Python.\nFor numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format\nAnd for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format\nWe add one item to d3's date formatter: `%{n}f` for fractional seconds with n digits.\nFor example, `\"2016-10-13 09:15:23.456\"` with tickformat `\"%H~%M~%S.%2f\"` would display `\"09~15~23.46\"`",
                    "type": "string"
                },
                "tickformatstops": {
                    "description": "Array of `Partial<TickFormatStop>` objects.",
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.TickFormatStop>"
                    },
                    "type": "array"
                },
                "ticklen": {
                    "type": "number"
                },
                "tickmode": {
                    "description": "Ticks",
                    "enum": [
                        "array",
                        "auto",
                        "linear"
                    ],
                    "type": "string"
                },
                "tickprefix": {
                    "type": "string"
                },
                "ticks": {
                    "enum": [
                        "",
                        "inside",
                        "outside"
                    ],
                    "type": "string"
                },
                "ticksuffix": {
                    "description": "Sets a tick label suffix.",
                    "type": "string"
                },
                "ticktext": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "tickvals": {
                    "items": {},
                    "type": "array"
                },
                "tickwidth": {
                    "type": "number"
                },
                "title": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Partial<Plotly.DataTitle>"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "titlefont": {
                    "$ref": "#/definitions/Partial<Plotly.Font>",
                    "description": "Former `titlefont` is now the sub-attribute `font` of `title`.\nTo customize title font properties, please use `title.font` now."
                },
                "type": {
                    "enum": [
                        "-",
                        "category",
                        "date",
                        "linear",
                        "log",
                        "multicategory"
                    ],
                    "type": "string"
                },
                "visible": {
                    "description": "A single toggle to hide the axis while preserving interaction like dragging.\nDefault is true when a cheater plot is present on the axis, otherwise\nfalse",
                    "type": "boolean"
                },
                "zeroline": {
                    "description": "Determines whether or not a line is drawn at along the 0 value\nof this axis.\nIf `true`, the zero line is drawn on top of the grid lines.",
                    "type": "boolean"
                },
                "zerolinecolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ],
                    "description": "Sets the line color of the zero line."
                },
                "zerolinewidth": {
                    "description": "Sets the width (in px) of the zero line.",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.Annotations>": {
            "properties": {
                "align": {
                    "description": "Sets the horizontal alignment of the `text` within the box.\nHas an effect only if `text` spans more two or more lines\n(i.e. `text` contains one or more <br> HTML tags) or if an\nexplicit width is set to override the text width.",
                    "enum": [
                        "center",
                        "left",
                        "right"
                    ],
                    "type": "string"
                },
                "arrowcolor": {
                    "description": "Sets the color of the annotation arrow.",
                    "type": "string"
                },
                "arrowhead": {
                    "description": "Sets the end annotation arrow head style.",
                    "type": "number"
                },
                "arrowside": {
                    "description": "Sets the annotation arrow head position.",
                    "enum": [
                        "end",
                        "start"
                    ],
                    "type": "string"
                },
                "arrowsize": {
                    "description": "Sets the size of the end annotation arrow head, relative to `arrowwidth`.\nA value of 1 (default) gives a head about 3x as wide as the line.",
                    "type": "number"
                },
                "arrowwidth": {
                    "description": "Sets the width (in px) of annotation arrow line.",
                    "type": "number"
                },
                "ax": {
                    "description": "Sets the x component of the arrow tail about the arrow head.\nIf `axref` is `pixel`, a positive (negative)\ncomponent corresponds to an arrow pointing\nfrom right to left (left to right).\nIf `axref` is an axis, this is an absolute value on that axis,\nlike `x`, NOT a relative value.",
                    "type": "number"
                },
                "axref": {
                    "description": "Indicates in what terms the tail of the annotation (ax,ay)\nis specified. If `pixel`, `ax` is a relative offset in pixels\nfrom `x`. If set to an x axis id (e.g. *x* or *x2*), `ax` is\nspecified in the same terms as that axis. This is useful\nfor trendline annotations which should continue to indicate\nthe correct trend when zoomed.",
                    "enum": [
                        "pixel",
                        "x",
                        "x10",
                        "x11",
                        "x2",
                        "x3",
                        "x4",
                        "x5",
                        "x6",
                        "x7",
                        "x8",
                        "x9"
                    ],
                    "type": "string"
                },
                "ay": {
                    "description": "Sets the y component of the arrow tail about the arrow head.\nIf `ayref` is `pixel`, a positive (negative)\ncomponent corresponds to an arrow pointing\nfrom bottom to top (top to bottom).\nIf `ayref` is an axis, this is an absolute value on that axis,\nlike `y`, NOT a relative value.",
                    "type": "number"
                },
                "ayref": {
                    "description": "Indicates in what terms the tail of the annotation (ax,ay)\nis specified. If `pixel`, `ay` is a relative offset in pixels\nfrom `y`. If set to a y axis id (e.g. *y* or *y2*), `ay` is\nspecified in the same terms as that axis. This is useful\nfor trendline annotations which should continue to indicate\nthe correct trend when zoomed.",
                    "enum": [
                        "pixel",
                        "y",
                        "y10",
                        "y11",
                        "y2",
                        "y3",
                        "y4",
                        "y5",
                        "y6",
                        "y7",
                        "y8",
                        "y9"
                    ],
                    "type": "string"
                },
                "bgcolor": {
                    "description": "Sets the background color of all hover labels on graph.",
                    "type": "string"
                },
                "bordercolor": {
                    "description": "Sets the border color of all hover labels on graph.",
                    "type": "string"
                },
                "borderpad": {
                    "description": "Sets the padding (in px) between the `text` and the enclosing border.",
                    "type": "number"
                },
                "borderwidth": {
                    "description": "Sets the width (in px) of the border enclosing the annotation `text`.",
                    "type": "number"
                },
                "captureevents": {
                    "description": "Determines whether the annotation text box captures mouse move and click events,\nor allows those events to pass through to data points in the plot that may be\nbehind the annotation. By default `captureevents` is *false* unless `hovertext`\nis provided. If you use the event `plotly_clickannotation` without `hovertext`\nyou must explicitly enable `captureevents`.",
                    "type": "boolean"
                },
                "clicktoshow": {
                    "description": "Makes this annotation respond to clicks on the plot.\nIf you click a data point that exactly matches the `x` and `y` values of this annotation,\nand it is hidden (visible: false), it will appear. In *onoff* mode, you must click the same\npoint again to make it disappear, so if you click multiple points, you can show multiple\nannotations. In *onout* mode, a click anywhere else in the plot (on another data point or not)\nwill hide this annotation. If you need to show/hide this annotation in response to different\n`x` or `y` values, you can set `xclick` and/or `yclick`. This is useful for example to label\nthe side of a bar. To label markers though, `standoff` is preferred over `xclick` and `yclick`.",
                    "enum": [
                        false,
                        "onoff",
                        "onout"
                    ]
                },
                "font": {
                    "$ref": "#/definitions/Partial<Plotly.Font>",
                    "description": "Sets the default hover label font used by all traces on the graph."
                },
                "height": {
                    "description": "Sets an explicit height for the text box. null (default) lets the\ntext set the box height. Taller text will be clipped.",
                    "type": "number"
                },
                "hoverlabel": {
                    "$ref": "#/definitions/Partial<Plotly.HoverLabel>"
                },
                "hovertext": {
                    "description": "Sets text to appear when hovering over this annotation.\nIf omitted or blank, no hover label will appear.",
                    "type": "string"
                },
                "opacity": {
                    "description": "Sets the opacity of the annotation (text + arrow).",
                    "type": "number"
                },
                "showarrow": {
                    "description": "Determines whether or not the annotation is drawn with an arrow.\nIf *true*, `text` is placed near the arrow's tail.\nIf *false*, `text` lines up with the `x` and `y` provided.",
                    "type": "boolean"
                },
                "standoff": {
                    "description": "Sets a distance, in pixels, to move the end arrowhead away from the\nposition it is pointing at, for example to point at the edge of\na marker independent of zoom. Note that this shortens the arrow\nfrom the `ax` / `ay` vector, in contrast to `xshift` / `yshift`\nwhich moves everything by this amount.",
                    "type": "number"
                },
                "startarrowhead": {
                    "description": "Sets the start annotation arrow head style.",
                    "type": "number"
                },
                "startarrowsize": {
                    "description": "Sets the size of the start annotation arrow head, relative to `arrowwidth`.\nA value of 1 (default) gives a head about 3x as wide as the line.",
                    "type": "number"
                },
                "startstandoff": {
                    "description": "Sets a distance, in pixels, to move the start arrowhead away from the\nposition it is pointing at, for example to point at the edge of\na marker independent of zoom. Note that this shortens the arrow\nfrom the `ax` / `ay` vector, in contrast to `xshift` / `yshift`\nwhich moves everything by this amount.",
                    "type": "number"
                },
                "text": {
                    "description": "Sets the text associated with this annotation.\nPlotly uses a subset of HTML tags to do things like\nnewline (<br>), bold (<b></b>), italics (<i></i>),\nhyperlinks (<a href='...'></a>). Tags <em>, <sup>, <sub>\n<span> are also supported.",
                    "type": "string"
                },
                "textangle": {
                    "description": "Sets the angle at which the `text` is drawn with respect to the horizontal.",
                    "type": "string"
                },
                "valign": {
                    "description": "Sets the vertical alignment of the `text` within the box.\nHas an effect only if an explicit height is set to override the text height.",
                    "enum": [
                        "bottom",
                        "middle",
                        "top"
                    ],
                    "type": "string"
                },
                "visible": {
                    "description": "Determines whether or not this annotation is visible.",
                    "type": "boolean"
                },
                "width": {
                    "description": "Sets an explicit width for the text box. null (default) lets the\ntext set the box width. Wider text will be clipped.\nThere is no automatic wrapping; use <br> to start a new line.",
                    "type": "number"
                },
                "x": {
                    "description": "Sets the annotation's x position.\nIf the axis `type` is *log*, then you must take the log of your desired range.\nIf the axis `type` is *date*, it should be date strings, like date data,\nthough Date objects and unix milliseconds will be accepted and converted to strings.\nIf the axis `type` is *category*, it should be numbers, using the scale where each\ncategory is assigned a serial number from zero in the order it appears.",
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "xanchor": {
                    "description": "Sets the text box's horizontal position anchor\nThis anchor binds the `x` position to the *left*, *center* or *right* of the annotation.\nFor example, if `x` is set to 1, `xref` to *paper* and `xanchor` to *right* then the\nright-most portion of the annotation lines up with the right-most edge of the plotting area.\nIf *auto*, the anchor is equivalent to *center* for data-referenced annotations or if there\nis an arrow, whereas for paper-referenced with no arrow, the anchor picked corresponds to the closest side.",
                    "enum": [
                        "auto",
                        "center",
                        "left",
                        "right"
                    ],
                    "type": "string"
                },
                "xclick": {
                    "description": "Toggle this annotation when clicking a data point whose `x` value\nis `xclick` rather than the annotation's `x` value."
                },
                "xref": {
                    "description": "Sets the annotation's x coordinate axis.\nIf set to an x axis id (e.g. *x* or *x2*), the `x` position refers to an x coordinate\nIf set to *paper*, the `x` position refers to the distance from\nthe left side of the plotting area in normalized coordinates\nwhere 0 (1) corresponds to the left (right) side.",
                    "enum": [
                        "paper",
                        "x",
                        "x10",
                        "x11",
                        "x2",
                        "x3",
                        "x4",
                        "x5",
                        "x6",
                        "x7",
                        "x8",
                        "x9"
                    ],
                    "type": "string"
                },
                "xshift": {
                    "description": "Shifts the position of the whole annotation and arrow to the\nright (positive) or left (negative) by this many pixels.",
                    "type": "number"
                },
                "y": {
                    "description": "Sets the annotation's y position.\nIf the axis `type` is *log*, then you must take the log of your desired range.\nIf the axis `type` is *date*, it should be date strings, like date data,\nthough Date objects and unix milliseconds will be accepted and converted to strings.\nIf the axis `type` is *category*, it should be numbers, using the scale where each\ncategory is assigned a serial number from zero in the order it appears.",
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "yanchor": {
                    "description": "Sets the text box's vertical position anchor\nThis anchor binds the `y` position to the *top*, *middle* or *bottom* of the annotation.\nFor example, if `y` is set to 1, `yref` to *paper* and `yanchor` to *top* then the\ntop-most portion of the annotation lines up with the top-most edge of the plotting area.\nIf *auto*, the anchor is equivalent to *middle* for data-referenced annotations or if\nthere is an arrow, whereas for paper-referenced with no arrow, the anchor picked\ncorresponds to the closest side.",
                    "enum": [
                        "auto",
                        "bottom",
                        "middle",
                        "top"
                    ],
                    "type": "string"
                },
                "yclick": {
                    "description": "Toggle this annotation when clicking a data point whose `y` value\nis `yclick` rather than the annotation's `y` value."
                },
                "yref": {
                    "description": "Sets the annotation's y coordinate axis.\nIf set to an y axis id (e.g. *y* or *y2*), the `y` position refers to an y coordinate\nIf set to *paper*, the `y` position refers to the distance from\nthe bottom of the plotting area in normalized coordinates\nwhere 0 (1) corresponds to the bottom (top).",
                    "enum": [
                        "paper",
                        "y",
                        "y10",
                        "y11",
                        "y2",
                        "y3",
                        "y4",
                        "y5",
                        "y6",
                        "y7",
                        "y8",
                        "y9"
                    ],
                    "type": "string"
                },
                "yshift": {
                    "description": "Shifts the position of the whole annotation and arrow up\n(positive) or down (negative) by this many pixels.",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.Axis>": {
            "properties": {
                "autorange": {
                    "enum": [
                        false,
                        "reversed",
                        true
                    ]
                },
                "calendar": {
                    "enum": [
                        "chinese",
                        "coptic",
                        "discworld",
                        "ethiopian",
                        "gregorian",
                        "hebrew",
                        "islamic",
                        "jalali",
                        "julian",
                        "mayan",
                        "nanakshahi",
                        "nepali",
                        "persian",
                        "taiwan",
                        "thai",
                        "ummalqura"
                    ],
                    "type": "string"
                },
                "categoryarray": {
                    "items": {},
                    "type": "array"
                },
                "categoryorder": {
                    "description": "Specifies the ordering logic for the case of categorical variables.\nBy default, plotly uses *trace*, which specifies the order that is present in the data supplied.\nSet `categoryorder` to *category ascending* or *category descending* if order should be determined by\nthe alphanumerical order of the category names.\nSet `categoryorder` to *array* to derive the ordering from the attribute `categoryarray`. If a category\nis not found in the `categoryarray` array, the sorting behavior for that attribute will be identical to\nthe *trace* mode. The unspecified categories will follow the categories in `categoryarray`.\nSet `categoryorder` to *total ascending* or *total descending* if order should be determined by the\nnumerical order of the values.\nSimilarly, the order can be determined by the min, max, sum, mean or median of all the values.",
                    "enum": [
                        "array",
                        "category ascending",
                        "category descending",
                        "max ascending",
                        "max descending",
                        "mean ascending",
                        "mean descending",
                        "median ascending",
                        "median descending",
                        "min ascending",
                        "min descending",
                        "sum ascending",
                        "sum descending",
                        "total ascending",
                        "total descending",
                        "trace"
                    ],
                    "type": "string"
                },
                "color": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ],
                    "description": "Sets default for all colors associated with this axis\nall at once: line, font, tick, and grid colors.\nGrid color is lightened by blending this with the plot background\nIndividual pieces can override this."
                },
                "dividercolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ],
                    "description": "Sets the color of the dividers\nOnly has an effect on *multicategory* axes."
                },
                "dividerwidth": {
                    "description": "Sets the width (in px) of the dividers\nOnly has an effect on *multicategory* axes.",
                    "type": "number"
                },
                "dtick": {
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "exponentformat": {
                    "description": "Determines a formatting rule for the tick exponents.\nFor example, consider the number 1,000,000,000.\nIf `none`, it appears as *1,000,000,000*.\nIf `e`, *1e+9*.\nIf `E`, *1E+9*.\nIf `power`, *1x10^9* (with 9 in a super script).\nIf `SI`, *1G*.\nIf `B`, *1B*.",
                    "enum": [
                        "B",
                        "E",
                        "SI",
                        "e",
                        "none",
                        "power"
                    ],
                    "type": "string"
                },
                "fixedrange": {
                    "description": "Determines whether or not this axis is zoom-able.\nIf true, then zoom is disabled.",
                    "type": "boolean"
                },
                "gridcolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ],
                    "description": "Sets the color of the grid lines."
                },
                "gridwidth": {
                    "description": "Sets the width (in px) of the grid lines.",
                    "type": "number"
                },
                "hoverformat": {
                    "description": "Sets the hover text formatting rule using d3 formatting mini-languages\nwhich are very similar to those in Python.\nFor numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format\nAnd for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format\nWe add one item to d3's date formatter: `%{n}f` for fractional seconds with n digits.\nFor example, `\"2016-10-13 09:15:23.456\"` with tickformat `\"%H~%M~%S.%2f\"` would display \"09~15~23.46\"",
                    "type": "string"
                },
                "linecolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ],
                    "description": "Sets the axis line color"
                },
                "linewidth": {
                    "description": "Sets the width (in px) of the axis line.",
                    "type": "number"
                },
                "mirror": {
                    "enum": [
                        "all",
                        "allticks",
                        false,
                        "ticks",
                        true
                    ]
                },
                "nticks": {
                    "type": "number"
                },
                "range": {
                    "items": {},
                    "type": "array"
                },
                "rangemode": {
                    "description": "'If *normal*, the range is computed in relation to the extrema\nof the input data.\nIf *tozero*`, the range extends to 0,\nregardless of the input data\nIf *nonnegative*, the range is non-negative,\nregardless of the input data.\nApplies only to linear axes.",
                    "enum": [
                        "nonnegative",
                        "normal",
                        "tozero"
                    ],
                    "type": "string"
                },
                "separatethousands": {
                    "description": "'If `true`, even 4-digit integers are separated",
                    "type": "boolean"
                },
                "showdividers": {
                    "description": "Determines whether or not a dividers are drawn\nbetween the category levels of this axis.\nOnly has an effect on *multicategory* axes.",
                    "type": "boolean"
                },
                "showexponent": {
                    "description": "If `all`, all exponents are shown besides their significands.\nIf `first`, only the exponent of the first tick is shown.\nIf `last`, only the exponent of the last tick is shown.\nIf `none`, no exponents appear.",
                    "enum": [
                        "all",
                        "first",
                        "last",
                        "none"
                    ],
                    "type": "string"
                },
                "showgrid": {
                    "description": "Determines whether or not grid lines are drawn.\nIf `true`, the grid lines are drawn at every tick mark.",
                    "type": "boolean"
                },
                "showline": {
                    "description": "Determines whether or not a line bounding this axis is drawn.",
                    "type": "boolean"
                },
                "showspikes": {
                    "type": "boolean"
                },
                "showticklabels": {
                    "type": "boolean"
                },
                "showtickprefix": {
                    "description": "If `all`, all tick labels are displayed with a prefix.\nIf `first`, only the first tick is displayed with a prefix.\nIf `last`, only the last tick is displayed with a suffix.\nIf `none`, tick prefixes are hidden.",
                    "enum": [
                        "all",
                        "first",
                        "last",
                        "none"
                    ],
                    "type": "string"
                },
                "showticksuffix": {
                    "description": "Same as `showtickprefix` but for tick suffixes.",
                    "enum": [
                        "all",
                        "first",
                        "last",
                        "none"
                    ],
                    "type": "string"
                },
                "spikecolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "spikedash": {
                    "type": "string"
                },
                "spikemode": {
                    "description": "Determines the drawing mode for the spike line.\nIf `toaxis`, the line is drawn from the data point to the axis the\nseries is plotted on.\nIf `across`, the line is drawn across the entire plot area, and\nsupercedes *toaxis*.\nIf `marker`, then a marker dot is drawn on the axis the series is\nplotted on",
                    "enum": [
                        "across",
                        "across+marker",
                        "marker",
                        "toaxis",
                        "toaxis+across",
                        "toaxis+across+marker",
                        "toaxis+marker"
                    ],
                    "type": "string"
                },
                "spikesnap": {
                    "description": "Determines whether spikelines are stuck to the cursor or to the closest datapoints.",
                    "enum": [
                        "cursor",
                        "data",
                        "hovered data"
                    ],
                    "type": "string"
                },
                "spikethickness": {
                    "type": "number"
                },
                "tick0": {
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "tickangle": {
                    "anyOf": [
                        {
                            "const": "auto",
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "tickcolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "tickfont": {
                    "$ref": "#/definitions/Partial<Plotly.Font>"
                },
                "tickformat": {
                    "description": "Sets the tick label formatting rule using d3 formatting mini-languages\nwhich are very similar to those in Python.\nFor numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format\nAnd for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format\nWe add one item to d3's date formatter: `%{n}f` for fractional seconds with n digits.\nFor example, `\"2016-10-13 09:15:23.456\"` with tickformat `\"%H~%M~%S.%2f\"` would display `\"09~15~23.46\"`",
                    "type": "string"
                },
                "tickformatstops": {
                    "description": "Array of `Partial<TickFormatStop>` objects.",
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.TickFormatStop>"
                    },
                    "type": "array"
                },
                "ticklen": {
                    "type": "number"
                },
                "tickmode": {
                    "description": "Ticks",
                    "enum": [
                        "array",
                        "auto",
                        "linear"
                    ],
                    "type": "string"
                },
                "tickprefix": {
                    "type": "string"
                },
                "ticks": {
                    "enum": [
                        "",
                        "inside",
                        "outside"
                    ],
                    "type": "string"
                },
                "ticksuffix": {
                    "description": "Sets a tick label suffix.",
                    "type": "string"
                },
                "ticktext": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "tickvals": {
                    "items": {},
                    "type": "array"
                },
                "tickwidth": {
                    "type": "number"
                },
                "title": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Partial<Plotly.DataTitle>"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "titlefont": {
                    "$ref": "#/definitions/Partial<Plotly.Font>",
                    "description": "Former `titlefont` is now the sub-attribute `font` of `title`.\nTo customize title font properties, please use `title.font` now."
                },
                "type": {
                    "enum": [
                        "-",
                        "category",
                        "date",
                        "linear",
                        "log",
                        "multicategory"
                    ],
                    "type": "string"
                },
                "visible": {
                    "description": "A single toggle to hide the axis while preserving interaction like dragging.\nDefault is true when a cheater plot is present on the axis, otherwise\nfalse",
                    "type": "boolean"
                },
                "zeroline": {
                    "description": "Determines whether or not a line is drawn at along the 0 value\nof this axis.\nIf `true`, the zero line is drawn on top of the grid lines.",
                    "type": "boolean"
                },
                "zerolinecolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ],
                    "description": "Sets the line color of the zero line."
                },
                "zerolinewidth": {
                    "description": "Sets the width (in px) of the zero line.",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.Camera>": {
            "properties": {
                "center": {
                    "$ref": "#/definitions/Partial<Plotly.Point>"
                },
                "eye": {
                    "$ref": "#/definitions/Partial<Plotly.Point>"
                },
                "up": {
                    "$ref": "#/definitions/Partial<Plotly.Point>"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.ColorBar>": {
            "properties": {
                "bgcolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "bordercolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "borderwidth": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "dtick": {
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "exponentformat": {
                    "enum": [
                        "B",
                        "E",
                        "SI",
                        "e",
                        "none",
                        "power"
                    ],
                    "type": "string"
                },
                "len": {
                    "type": "number"
                },
                "lenmode": {
                    "enum": [
                        "fraction",
                        "pixels"
                    ],
                    "type": "string"
                },
                "nticks": {
                    "type": "number"
                },
                "outlinecolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "outlinewidth": {
                    "type": "number"
                },
                "separatethousands": {
                    "type": "boolean"
                },
                "showexponent": {
                    "enum": [
                        "all",
                        "first",
                        "last",
                        "none"
                    ],
                    "type": "string"
                },
                "showticklabels": {
                    "type": "boolean"
                },
                "showtickprefix": {
                    "enum": [
                        "all",
                        "first",
                        "last",
                        "none"
                    ],
                    "type": "string"
                },
                "showticksuffix": {
                    "enum": [
                        "all",
                        "first",
                        "last",
                        "none"
                    ],
                    "type": "string"
                },
                "thickness": {
                    "type": "number"
                },
                "thicknessmode": {
                    "enum": [
                        "fraction",
                        "pixels"
                    ],
                    "type": "string"
                },
                "tick0": {
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "tickangle": {
                    "anyOf": [
                        {
                            "const": "auto",
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "tickcolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "tickfont": {
                    "$ref": "#/definitions/Plotly.Font"
                },
                "tickformat": {
                    "type": "string"
                },
                "tickformatstops": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.TickFormatStop>"
                    },
                    "type": "array"
                },
                "ticklen": {
                    "type": "number"
                },
                "tickmode": {
                    "enum": [
                        "array",
                        "auto",
                        "linear"
                    ],
                    "type": "string"
                },
                "tickprefix": {
                    "type": "string"
                },
                "ticks": {
                    "enum": [
                        "",
                        "inside",
                        "outside"
                    ],
                    "type": "string"
                },
                "ticksuffix": {
                    "type": "string"
                },
                "ticktext": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/definitions/Plotly.Datum"
                            },
                            "type": "array"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int8Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint8Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint8ClampedArray",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int16Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint16Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Float32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Float64Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "items": {
                                "items": {
                                    "$ref": "#/definitions/Plotly.Datum"
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "items": {
                                        "$ref": "#/definitions/Plotly.Datum"
                                    },
                                    "type": "array"
                                },
                                "type": "array"
                            },
                            "type": "array"
                        }
                    ]
                },
                "ticktextsrc": {},
                "tickvals": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/definitions/Plotly.Datum"
                            },
                            "type": "array"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int8Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint8Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint8ClampedArray",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int16Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint16Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Float32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Float64Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "items": {
                                "items": {
                                    "$ref": "#/definitions/Plotly.Datum"
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "items": {
                                        "$ref": "#/definitions/Plotly.Datum"
                                    },
                                    "type": "array"
                                },
                                "type": "array"
                            },
                            "type": "array"
                        }
                    ]
                },
                "tickvalssrc": {},
                "tickwidth": {
                    "type": "number"
                },
                "title": {
                    "type": "string"
                },
                "titlefont": {
                    "$ref": "#/definitions/Plotly.Font"
                },
                "titleside": {
                    "enum": [
                        "bottom",
                        "right",
                        "top"
                    ],
                    "type": "string"
                },
                "x": {
                    "type": "number"
                },
                "xanchor": {
                    "enum": [
                        "center",
                        "left",
                        "right"
                    ],
                    "type": "string"
                },
                "xpad": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                },
                "yanchor": {
                    "enum": [
                        "bottom",
                        "middle",
                        "top"
                    ],
                    "type": "string"
                },
                "ypad": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.Config>": {
            "properties": {
                "autosizable": {
                    "description": "DO autosize once regardless of layout.autosize (use default width or height values otherwise)",
                    "type": "boolean"
                },
                "displayModeBar": {
                    "description": "display the mode bar (true, false, or 'hover')",
                    "enum": [
                        false,
                        "hover",
                        true
                    ]
                },
                "displaylogo": {
                    "description": "add the plotly logo on the end of the mode bar",
                    "type": "boolean"
                },
                "doubleClick": {
                    "description": "double click interaction (false, 'reset', 'autosize' or 'reset+autosize')",
                    "enum": [
                        "autosize",
                        false,
                        "reset",
                        "reset+autosize"
                    ]
                },
                "doubleClickDelay": {
                    "description": "sets the delay for registering a double-click in ms",
                    "type": "number"
                },
                "editable": {
                    "description": "we can edit titles, move annotations, etc",
                    "type": "boolean"
                },
                "edits": {
                    "$ref": "#/definitions/Partial<Plotly.Edits>"
                },
                "fillFrame": {
                    "description": "if we DO autosize, do we fill the container or the screen?",
                    "type": "boolean"
                },
                "frameMargins": {
                    "description": "if we DO autosize, set the frame margins in percents of plot size",
                    "type": "number"
                },
                "globalTransforms": {
                    "description": "Set global transform to be applied to all traces with no specification needed",
                    "items": {},
                    "type": "array"
                },
                "linkText": {
                    "description": "text appearing in the sendData link",
                    "type": "string"
                },
                "locale": {
                    "description": "Which localization should we use? Should be a string like 'en' or 'en-US'",
                    "type": "string"
                },
                "locales": {
                    "description": "Localization definitions\nLocales can be provided either here (specific to one chart) or globally\nby registering them as modules.\nShould be an object of objects {locale: {dictionary: {...}, format: {...}}}\n{\n    da: {\n        dictionary: {'Reset axes': 'Nulstil aksler', ...},\n        format: {months: [...], shortMonths: [...]}\n    },\n    ...\n}\nAll parts are optional. When looking for translation or format fields, we\nlook first for an exact match in a config locale, then in a registered\nmodule. If those fail, we strip off any regionalization ('en-US' -> 'en')\nand try each (config, registry) again. The final fallback for translation\nis untranslated (which is US English) and for formats is the base English\n(the only consequence being the last fallback date format %x is DD/MM/YYYY\ninstead of MM/DD/YYYY). Currently `grouping` and `currency` are ignored\nfor our automatic number formatting, but can be used in custom formats.",
                    "properties": {},
                    "type": "object"
                },
                "logging": {
                    "description": "Turn all console logging on or off (errors will be thrown)\nThis should ONLY be set via Plotly.setPlotConfig",
                    "enum": [
                        0,
                        1,
                        2,
                        false,
                        true
                    ]
                },
                "mapboxAccessToken": {
                    "description": "Mapbox access token (required to plot mapbox trace types)\nIf using an Mapbox Atlas server, set this option to '',\nso that plotly.js won't attempt to authenticate to the public Mapbox server.",
                    "type": "string"
                },
                "modeBarButtons": {
                    "anyOf": [
                        {
                            "items": {
                                "items": {
                                    "$ref": "#/definitions/Plotly.ModeBarButtonAny"
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "const": false,
                            "type": "boolean"
                        }
                    ],
                    "description": "fully custom mode bar buttons as nested array, where the outer\narrays represents button groups, and the inner arrays have\nbuttons config objects or names of default buttons\n(see ./components/modebar/buttons.js for more info)"
                },
                "modeBarButtonsToAdd": {
                    "description": "add mode bar button using config objects (see ./components/modebar/buttons.js for list of arguments)",
                    "items": {
                        "$ref": "#/definitions/Plotly.ModeBarButtonAny"
                    },
                    "type": "array"
                },
                "modeBarButtonsToRemove": {
                    "description": "remove mode bar button by name (see ./components/modebar/buttons.js for the list of names)",
                    "items": {
                        "$ref": "#/definitions/Plotly.ModeBarDefaultButtons"
                    },
                    "type": "array"
                },
                "plotGlPixelRatio": {
                    "description": "increase the pixel ratio for Gl plot images",
                    "type": "number"
                },
                "plotlyServerURL": {
                    "default": "''",
                    "description": "When set it determines base URL for the 'Edit in Chart Studio' `showEditInChartStudio`/`showSendToCloud` mode bar button and the showLink/sendData on-graph link.\nTo enable sending your data to Chart Studio Cloud, you need to set both `plotlyServerURL` to 'https://chart-studio.plotly.com' and also set `showSendToCloud` to true.",
                    "type": "string"
                },
                "queueLength": {
                    "description": "set the length of the undo/redo queue",
                    "type": "number"
                },
                "responsive": {
                    "description": "Make the chart responsive to window size",
                    "type": "boolean"
                },
                "scrollZoom": {
                    "description": "mousewheel or two-finger scroll zooms the plot",
                    "type": "boolean"
                },
                "sendData": {
                    "description": "if we show a link, does it contain data or just link to a plotly file?",
                    "type": "boolean"
                },
                "setBackground": {
                    "anyOf": [
                        {
                            "enum": [
                                "opaque",
                                "transparent"
                            ],
                            "type": "string"
                        },
                        {
                            "type": "object"
                        }
                    ],
                    "description": "function to add the background color to a different container\nor 'opaque' to ensure there's white behind it"
                },
                "showAxisDragHandles": {
                    "description": "enable axis pan/zoom drag handles",
                    "type": "boolean"
                },
                "showAxisRangeEntryBoxes": {
                    "description": "enable direct range entry at the pan/zoom drag points (drag handles must be enabled above)",
                    "type": "boolean"
                },
                "showEditInChartStudio": {
                    "default": false,
                    "description": "Same as `showSendToCloud`, but use a pencil icon instead of a floppy-disk.\nNote that if both `showSendToCloud` and `showEditInChartStudio` are turned, only `showEditInChartStudio` will be honored.",
                    "type": "boolean"
                },
                "showLink": {
                    "description": "link to open this plot in plotly",
                    "type": "boolean"
                },
                "showSendToCloud": {
                    "default": false,
                    "description": "Should we include a ModeBar button, labeled \"Edit in Chart Studio\",\nthat sends this chart to chart-studio.plotly.com (formerly plot.ly)\nor another plotly server as specified by `plotlyServerURL` for editing, export, etc?\nPrior to version 1.43.0 this button was included by default, now it is opt-in using this flag.\nNote that this button can (depending on `plotlyServerURL` being set) send your data to an external server.\nHowever that server does not persist your data until you arrive at the Chart Studio and explicitly click \"Save\".",
                    "type": "boolean"
                },
                "showSources": {
                    "description": "false or function adding source(s) to linkText <text>",
                    "type": "boolean"
                },
                "showTips": {
                    "description": "new users see some hints about interactivity",
                    "type": "boolean"
                },
                "staticPlot": {
                    "description": "no interactivity, for export or image generation",
                    "type": "boolean"
                },
                "toImageButtonOptions": {
                    "$ref": "#/definitions/Partial<{filename:string;scale:number;format:\"svg\"|\"png\"|\"jpeg\"|\"webp\";height:number;width:number;}>",
                    "description": "override the defaults for the toImageButton"
                },
                "topojsonURL": {
                    "description": "URL to topojson files used in geo charts",
                    "type": "string"
                },
                "typesetMath": {
                    "description": "Determines whether math should be typeset or not,\nwhen MathJax (either v2 or v3) is present on the page.",
                    "type": "boolean"
                },
                "watermark": {
                    "description": "Watermark the images with the company's logo",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.CurrentValue>": {
            "properties": {
                "font": {
                    "$ref": "#/definitions/Partial<Plotly.Font>",
                    "description": "Sets the font of the current value label text."
                },
                "offset": {
                    "description": "The amount of space, in pixels, between the current value label\nand the slider.",
                    "type": "number"
                },
                "prefix": {
                    "description": "When currentvalue.visible is true, this sets the prefix of the label.",
                    "type": "string"
                },
                "suffix": {
                    "description": "When currentvalue.visible is true, this sets the suffix of the label.",
                    "type": "string"
                },
                "visible": {
                    "description": "Shows the currently-selected value above the slider.",
                    "type": "boolean"
                },
                "xanchor": {
                    "description": "The alignment of the value readout relative to the length of the slider.",
                    "enum": [
                        "center",
                        "left",
                        "right"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.DataTitle>": {
            "properties": {
                "font": {
                    "$ref": "#/definitions/Partial<Plotly.Font>"
                },
                "position": {
                    "enum": [
                        "bottom center",
                        "bottom left",
                        "bottom right",
                        "middle center",
                        "top center",
                        "top left",
                        "top right"
                    ],
                    "type": "string"
                },
                "standoff": {
                    "type": "number"
                },
                "text": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.Delta>": {
            "properties": {
                "decreasing": {
                    "properties": {
                        "color": {
                            "$ref": "#/definitions/Plotly.Color"
                        },
                        "symbol": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "increasing": {
                    "properties": {
                        "color": {
                            "$ref": "#/definitions/Plotly.Color"
                        },
                        "symbol": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "position": {
                    "enum": [
                        "bottom",
                        "left",
                        "right",
                        "top"
                    ],
                    "type": "string"
                },
                "reference": {
                    "type": "number"
                },
                "relative": {
                    "type": "boolean"
                },
                "valueformat": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.Domain>": {
            "properties": {
                "column": {
                    "type": "number"
                },
                "row": {
                    "type": "number"
                },
                "x": {
                    "items": {
                        "type": "number"
                    },
                    "type": "array"
                },
                "y": {
                    "items": {
                        "type": "number"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.Edits>": {
            "properties": {
                "annotationPosition": {
                    "type": "boolean"
                },
                "annotationTail": {
                    "type": "boolean"
                },
                "annotationText": {
                    "type": "boolean"
                },
                "axisTitleText": {
                    "type": "boolean"
                },
                "colorbarPosition": {
                    "type": "boolean"
                },
                "colorbarTitleText": {
                    "type": "boolean"
                },
                "legendPosition": {
                    "type": "boolean"
                },
                "legendText": {
                    "type": "boolean"
                },
                "shapePosition": {
                    "type": "boolean"
                },
                "titleText": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.ErrorOptions>": {
            "properties": {
                "color": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "opacity": {
                    "type": "number"
                },
                "symmetric": {
                    "type": "boolean"
                },
                "thickness": {
                    "type": "number"
                },
                "visible": {
                    "type": "boolean"
                },
                "width": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.Font>": {
            "properties": {
                "color": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "family": {
                    "default": "Arial, sans-serif",
                    "description": "HTML font family - the typeface that will be applied by the web browser.\nThe web browser will only be able to apply a font if it is available on the system\nwhich it operates. Provide multiple font families, separated by commas, to indicate\nthe preference in which to apply fonts if they aren't available on the system.\nThe plotly service (at https://plot.ly or on-premise) generates images on a server,\nwhere only a select number of fonts are installed and supported.\nThese include *Arial*, *Balto*, *Courier New*, *Droid Sans*, *Droid Serif*,\n*Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*,\n*PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                    "type": "string"
                },
                "size": {
                    "default": 13,
                    "description": "number greater than or equal to 1",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.Gauge>": {
            "properties": {
                "axis": {
                    "$ref": "#/definitions/Partial<Plotly.Axis>"
                },
                "bar": {
                    "$ref": "#/definitions/Partial<Plotly.GaugeBar>"
                },
                "bgcolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "bordercolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "borderwidth": {
                    "type": "number"
                },
                "shape": {
                    "enum": [
                        "angular",
                        "bullet"
                    ],
                    "type": "string"
                },
                "steps": {
                    "items": {
                        "properties": {
                            "color": {
                                "$ref": "#/definitions/Plotly.Color"
                            },
                            "range": {
                                "items": {
                                    "type": "number"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "threshold": {
                    "$ref": "#/definitions/Partial<Plotly.Threshold>"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.GaugeBar>": {
            "properties": {
                "color": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "line": {
                    "$ref": "#/definitions/Partial<Plotly.GaugeLine>"
                },
                "thickness": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.GaugeLine>": {
            "properties": {
                "color": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "width": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.HoverLabel>": {
            "properties": {
                "align": {
                    "default": "auto",
                    "description": "Sets the horizontal alignment of the text content within hover label box.",
                    "enum": [
                        "auto",
                        "left",
                        "right"
                    ],
                    "type": "string"
                },
                "bgcolor": {
                    "description": "Sets the background color of all hover labels on graph.",
                    "type": "string"
                },
                "bordercolor": {
                    "description": "Sets the border color of all hover labels on graph.",
                    "type": "string"
                },
                "font": {
                    "$ref": "#/definitions/Partial<Plotly.Font>",
                    "description": "Sets the default hover label font used by all traces on the graph."
                },
                "namelength": {
                    "default": 15,
                    "description": "Sets the default length (in number of characters) of the trace name\nin the hover labels for all traces.\n-1 shows the whole name regardless of length.",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.Image>": {
            "properties": {
                "layer": {
                    "enum": [
                        "above",
                        "below"
                    ],
                    "type": "string"
                },
                "opacity": {
                    "type": "number"
                },
                "sizex": {
                    "type": "number"
                },
                "sizey": {
                    "type": "number"
                },
                "sizing": {
                    "enum": [
                        "contain",
                        "fill",
                        "stretch"
                    ],
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "visible": {
                    "type": "boolean"
                },
                "x": {
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "xanchor": {
                    "enum": [
                        "center",
                        "left",
                        "right"
                    ],
                    "type": "string"
                },
                "xref": {
                    "enum": [
                        "paper",
                        "x",
                        "x10",
                        "x11",
                        "x2",
                        "x3",
                        "x4",
                        "x5",
                        "x6",
                        "x7",
                        "x8",
                        "x9"
                    ],
                    "type": "string"
                },
                "y": {
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "yanchor": {
                    "enum": [
                        "bottom",
                        "middle",
                        "top"
                    ],
                    "type": "string"
                },
                "yref": {
                    "enum": [
                        "paper",
                        "y",
                        "y10",
                        "y11",
                        "y2",
                        "y3",
                        "y4",
                        "y5",
                        "y6",
                        "y7",
                        "y8",
                        "y9"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.Layout>": {
            "properties": {
                "angularaxis": {
                    "properties": {},
                    "type": "object"
                },
                "annotations": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.Annotations>"
                    },
                    "type": "array"
                },
                "autosize": {
                    "type": "boolean"
                },
                "bargap": {
                    "type": "number"
                },
                "bargroupgap": {
                    "type": "number"
                },
                "barmode": {
                    "enum": [
                        "group",
                        "overlay",
                        "relative",
                        "stack"
                    ],
                    "type": "string"
                },
                "barnorm": {
                    "enum": [
                        "",
                        "fraction",
                        "percent"
                    ],
                    "type": "string"
                },
                "boxmode": {
                    "enum": [
                        "group",
                        "overlay"
                    ],
                    "type": "string"
                },
                "calendar": {
                    "enum": [
                        "chinese",
                        "coptic",
                        "discworld",
                        "ethiopian",
                        "gregorian",
                        "hebrew",
                        "islamic",
                        "jalali",
                        "julian",
                        "mayan",
                        "nanakshahi",
                        "nepali",
                        "persian",
                        "taiwan",
                        "thai",
                        "ummalqura"
                    ],
                    "type": "string"
                },
                "clickmode": {
                    "enum": [
                        "event",
                        "event+select",
                        "none",
                        "select"
                    ],
                    "type": "string"
                },
                "colorway": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "datarevision": {
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "dragmode": {
                    "enum": [
                        false,
                        "lasso",
                        "orbit",
                        "pan",
                        "select",
                        "turntable",
                        "zoom"
                    ]
                },
                "editrevision": {
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "font": {
                    "$ref": "#/definitions/Partial<Plotly.Font>"
                },
                "geo": {
                    "properties": {},
                    "type": "object"
                },
                "grid": {
                    "$ref": "#/definitions/Partial<{rows:number;roworder:\"toptobottom\"|\"bottomtotop\";columns:number;subplots:string[];xaxes:string[];yaxes:string[];pattern:\"independent\"|\"coupled\";xgap:number;ygap:number;domain:Partial<{x:number[];y:number[];}>;xside:\"top\"|\"bottom\"|\"bottomplot\"|\"topplot\";yside:\"left\"|\"right\"|\"leftplot\"|\"rightplot\";}>"
                },
                "height": {
                    "type": "number"
                },
                "hiddenlabels": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "hidesources": {
                    "type": "boolean"
                },
                "hoverdistance": {
                    "type": "number"
                },
                "hoverlabel": {
                    "$ref": "#/definitions/Partial<Plotly.HoverLabel>"
                },
                "hovermode": {
                    "enum": [
                        "closest",
                        false,
                        "x",
                        "x unified",
                        "y",
                        "y unified"
                    ]
                },
                "images": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.Image>"
                    },
                    "type": "array"
                },
                "legend": {
                    "$ref": "#/definitions/Partial<Plotly.Legend>"
                },
                "mapbox": {
                    "$ref": "#/definitions/Partial<Plotly.Mapbox>"
                },
                "margin": {
                    "$ref": "#/definitions/Partial<Plotly.Margin>"
                },
                "modebar": {
                    "$ref": "#/definitions/Partial<Plotly.ModeBar>"
                },
                "orientation": {
                    "type": "number"
                },
                "paper_bgcolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "plot_bgcolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "polar": {
                    "$ref": "#/definitions/Partial<Plotly.PolarLayout>"
                },
                "polar2": {
                    "$ref": "#/definitions/Partial<Plotly.PolarLayout>"
                },
                "polar3": {
                    "$ref": "#/definitions/Partial<Plotly.PolarLayout>"
                },
                "polar4": {
                    "$ref": "#/definitions/Partial<Plotly.PolarLayout>"
                },
                "polar5": {
                    "$ref": "#/definitions/Partial<Plotly.PolarLayout>"
                },
                "polar6": {
                    "$ref": "#/definitions/Partial<Plotly.PolarLayout>"
                },
                "polar7": {
                    "$ref": "#/definitions/Partial<Plotly.PolarLayout>"
                },
                "polar8": {
                    "$ref": "#/definitions/Partial<Plotly.PolarLayout>"
                },
                "polar9": {
                    "$ref": "#/definitions/Partial<Plotly.PolarLayout>"
                },
                "radialaxis": {
                    "$ref": "#/definitions/Partial<Plotly.Axis>"
                },
                "scene": {
                    "$ref": "#/definitions/Partial<Plotly.Scene>"
                },
                "selectdirection": {
                    "enum": [
                        "any",
                        "d",
                        "h",
                        "v"
                    ],
                    "type": "string"
                },
                "selectionrevision": {
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "separators": {
                    "type": "string"
                },
                "shapes": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.Shape>"
                    },
                    "type": "array"
                },
                "showlegend": {
                    "type": "boolean"
                },
                "sliders": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.Slider>"
                    },
                    "type": "array"
                },
                "subplot": {
                    "type": "string"
                },
                "template": {
                    "$ref": "#/definitions/Plotly.Template"
                },
                "ternary": {
                    "properties": {},
                    "type": "object"
                },
                "title": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Partial<{text:string;font:Partial<Plotly.Font>;xref:\"container\"|\"paper\";yref:\"container\"|\"paper\";x:number;y:number;xanchor:\"center\"|\"auto\"|\"left\"|\"right\";yanchor:\"auto\"|\"top\"|\"middle\"|\"bottom\";pad:Partial<Plotly.Padding>;}>"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "titlefont": {
                    "$ref": "#/definitions/Partial<Plotly.Font>"
                },
                "transition": {
                    "$ref": "#/definitions/Plotly.Transition"
                },
                "uirevision": {
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "updatemenus": {
                    "properties": {},
                    "type": "object"
                },
                "width": {
                    "type": "number"
                },
                "xaxis": {
                    "$ref": "#/definitions/Partial<Plotly.LayoutAxis>"
                },
                "xaxis.autorange": {
                    "type": "boolean"
                },
                "xaxis.range": {
                    "items": [
                        {
                            "$ref": "#/definitions/Plotly.Datum"
                        },
                        {
                            "$ref": "#/definitions/Plotly.Datum"
                        }
                    ],
                    "maxItems": 2,
                    "minItems": 2,
                    "type": "array"
                },
                "xaxis.range[0]": {
                    "anyOf": [
                        {
                            "format": "date-time",
                            "type": "string"
                        },
                        {
                            "type": [
                                "null",
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "xaxis.range[1]": {
                    "anyOf": [
                        {
                            "format": "date-time",
                            "type": "string"
                        },
                        {
                            "type": [
                                "null",
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "xaxis.title": {
                    "type": "string"
                },
                "xaxis.type": {
                    "enum": [
                        "-",
                        "category",
                        "date",
                        "linear",
                        "log",
                        "multicategory"
                    ],
                    "type": "string"
                },
                "xaxis2": {
                    "$ref": "#/definitions/Partial<Plotly.LayoutAxis>"
                },
                "xaxis3": {
                    "$ref": "#/definitions/Partial<Plotly.LayoutAxis>"
                },
                "xaxis4": {
                    "$ref": "#/definitions/Partial<Plotly.LayoutAxis>"
                },
                "xaxis5": {
                    "$ref": "#/definitions/Partial<Plotly.LayoutAxis>"
                },
                "xaxis6": {
                    "$ref": "#/definitions/Partial<Plotly.LayoutAxis>"
                },
                "xaxis7": {
                    "$ref": "#/definitions/Partial<Plotly.LayoutAxis>"
                },
                "xaxis8": {
                    "$ref": "#/definitions/Partial<Plotly.LayoutAxis>"
                },
                "xaxis9": {
                    "$ref": "#/definitions/Partial<Plotly.LayoutAxis>"
                },
                "yaxis": {
                    "$ref": "#/definitions/Partial<Plotly.LayoutAxis>"
                },
                "yaxis.autorange": {
                    "type": "boolean"
                },
                "yaxis.range": {
                    "items": [
                        {
                            "$ref": "#/definitions/Plotly.Datum"
                        },
                        {
                            "$ref": "#/definitions/Plotly.Datum"
                        }
                    ],
                    "maxItems": 2,
                    "minItems": 2,
                    "type": "array"
                },
                "yaxis.range[0]": {
                    "anyOf": [
                        {
                            "format": "date-time",
                            "type": "string"
                        },
                        {
                            "type": [
                                "null",
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "yaxis.range[1]": {
                    "anyOf": [
                        {
                            "format": "date-time",
                            "type": "string"
                        },
                        {
                            "type": [
                                "null",
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "yaxis.title": {
                    "type": "string"
                },
                "yaxis.type": {
                    "enum": [
                        "-",
                        "category",
                        "date",
                        "linear",
                        "log",
                        "multicategory"
                    ],
                    "type": "string"
                },
                "yaxis2": {
                    "$ref": "#/definitions/Partial<Plotly.LayoutAxis>"
                },
                "yaxis3": {
                    "$ref": "#/definitions/Partial<Plotly.LayoutAxis>"
                },
                "yaxis4": {
                    "$ref": "#/definitions/Partial<Plotly.LayoutAxis>"
                },
                "yaxis5": {
                    "$ref": "#/definitions/Partial<Plotly.LayoutAxis>"
                },
                "yaxis6": {
                    "$ref": "#/definitions/Partial<Plotly.LayoutAxis>"
                },
                "yaxis7": {
                    "$ref": "#/definitions/Partial<Plotly.LayoutAxis>"
                },
                "yaxis8": {
                    "$ref": "#/definitions/Partial<Plotly.LayoutAxis>"
                },
                "yaxis9": {
                    "$ref": "#/definitions/Partial<Plotly.LayoutAxis>"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.LayoutAxis>": {
            "properties": {
                "anchor": {
                    "enum": [
                        "free",
                        "x",
                        "x10",
                        "x11",
                        "x2",
                        "x3",
                        "x4",
                        "x5",
                        "x6",
                        "x7",
                        "x8",
                        "x9",
                        "y",
                        "y10",
                        "y11",
                        "y2",
                        "y3",
                        "y4",
                        "y5",
                        "y6",
                        "y7",
                        "y8",
                        "y9"
                    ],
                    "type": "string"
                },
                "angle": {},
                "automargin": {
                    "type": "boolean"
                },
                "autorange": {
                    "enum": [
                        false,
                        "reversed",
                        true
                    ]
                },
                "autotick": {
                    "type": "boolean"
                },
                "calendar": {
                    "enum": [
                        "chinese",
                        "coptic",
                        "discworld",
                        "ethiopian",
                        "gregorian",
                        "hebrew",
                        "islamic",
                        "jalali",
                        "julian",
                        "mayan",
                        "nanakshahi",
                        "nepali",
                        "persian",
                        "taiwan",
                        "thai",
                        "ummalqura"
                    ],
                    "type": "string"
                },
                "categoryarray": {
                    "items": {},
                    "type": "array"
                },
                "categoryorder": {
                    "description": "Specifies the ordering logic for the case of categorical variables.\nBy default, plotly uses *trace*, which specifies the order that is present in the data supplied.\nSet `categoryorder` to *category ascending* or *category descending* if order should be determined by\nthe alphanumerical order of the category names.\nSet `categoryorder` to *array* to derive the ordering from the attribute `categoryarray`. If a category\nis not found in the `categoryarray` array, the sorting behavior for that attribute will be identical to\nthe *trace* mode. The unspecified categories will follow the categories in `categoryarray`.\nSet `categoryorder` to *total ascending* or *total descending* if order should be determined by the\nnumerical order of the values.\nSimilarly, the order can be determined by the min, max, sum, mean or median of all the values.",
                    "enum": [
                        "array",
                        "category ascending",
                        "category descending",
                        "max ascending",
                        "max descending",
                        "mean ascending",
                        "mean descending",
                        "median ascending",
                        "median descending",
                        "min ascending",
                        "min descending",
                        "sum ascending",
                        "sum descending",
                        "total ascending",
                        "total descending",
                        "trace"
                    ],
                    "type": "string"
                },
                "color": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ],
                    "description": "Sets default for all colors associated with this axis\nall at once: line, font, tick, and grid colors.\nGrid color is lightened by blending this with the plot background\nIndividual pieces can override this."
                },
                "constrain": {
                    "enum": [
                        "domain",
                        "range"
                    ],
                    "type": "string"
                },
                "constraintoward": {
                    "enum": [
                        "bottom",
                        "center",
                        "left",
                        "middle",
                        "right",
                        "top"
                    ],
                    "type": "string"
                },
                "direction": {
                    "enum": [
                        "clockwise",
                        "counterclockwise"
                    ],
                    "type": "string"
                },
                "dividercolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ],
                    "description": "Sets the color of the dividers\nOnly has an effect on *multicategory* axes."
                },
                "dividerwidth": {
                    "description": "Sets the width (in px) of the dividers\nOnly has an effect on *multicategory* axes.",
                    "type": "number"
                },
                "domain": {
                    "items": {
                        "type": "number"
                    },
                    "type": "array"
                },
                "dtick": {
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "exponentformat": {
                    "description": "Determines a formatting rule for the tick exponents.\nFor example, consider the number 1,000,000,000.\nIf `none`, it appears as *1,000,000,000*.\nIf `e`, *1e+9*.\nIf `E`, *1E+9*.\nIf `power`, *1x10^9* (with 9 in a super script).\nIf `SI`, *1G*.\nIf `B`, *1B*.",
                    "enum": [
                        "B",
                        "E",
                        "SI",
                        "e",
                        "none",
                        "power"
                    ],
                    "type": "string"
                },
                "fixedrange": {
                    "description": "Determines whether or not this axis is zoom-able.\nIf true, then zoom is disabled.",
                    "type": "boolean"
                },
                "gridcolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ],
                    "description": "Sets the color of the grid lines."
                },
                "griddash": {
                    "enum": [
                        "dash",
                        "dashdot",
                        "dot",
                        "longdash",
                        "longdashdot",
                        "solid"
                    ],
                    "type": "string"
                },
                "gridwidth": {
                    "description": "Sets the width (in px) of the grid lines.",
                    "type": "number"
                },
                "hoverformat": {
                    "description": "Sets the hover text formatting rule using d3 formatting mini-languages\nwhich are very similar to those in Python.\nFor numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format\nAnd for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format\nWe add one item to d3's date formatter: `%{n}f` for fractional seconds with n digits.\nFor example, `\"2016-10-13 09:15:23.456\"` with tickformat `\"%H~%M~%S.%2f\"` would display \"09~15~23.46\"",
                    "type": "string"
                },
                "layer": {
                    "enum": [
                        "above traces",
                        "below traces"
                    ],
                    "type": "string"
                },
                "linecolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ],
                    "description": "Sets the axis line color"
                },
                "linewidth": {
                    "description": "Sets the width (in px) of the axis line.",
                    "type": "number"
                },
                "mirror": {
                    "enum": [
                        "all",
                        "allticks",
                        false,
                        "ticks",
                        true
                    ]
                },
                "nticks": {
                    "type": "number"
                },
                "overlaying": {
                    "enum": [
                        "free",
                        "x",
                        "x10",
                        "x11",
                        "x2",
                        "x3",
                        "x4",
                        "x5",
                        "x6",
                        "x7",
                        "x8",
                        "x9",
                        "y",
                        "y10",
                        "y11",
                        "y2",
                        "y3",
                        "y4",
                        "y5",
                        "y6",
                        "y7",
                        "y8",
                        "y9"
                    ],
                    "type": "string"
                },
                "position": {
                    "type": "number"
                },
                "range": {
                    "items": {},
                    "type": "array"
                },
                "rangemode": {
                    "description": "'If *normal*, the range is computed in relation to the extrema\nof the input data.\nIf *tozero*`, the range extends to 0,\nregardless of the input data\nIf *nonnegative*, the range is non-negative,\nregardless of the input data.\nApplies only to linear axes.",
                    "enum": [
                        "nonnegative",
                        "normal",
                        "tozero"
                    ],
                    "type": "string"
                },
                "rangeselector": {
                    "$ref": "#/definitions/Partial<Plotly.RangeSelector>"
                },
                "rangeslider": {
                    "$ref": "#/definitions/Partial<Plotly.RangeSlider>"
                },
                "rotation": {
                    "type": "number"
                },
                "scaleanchor": {
                    "enum": [
                        "x",
                        "x10",
                        "x11",
                        "x2",
                        "x3",
                        "x4",
                        "x5",
                        "x6",
                        "x7",
                        "x8",
                        "x9",
                        "y",
                        "y10",
                        "y11",
                        "y2",
                        "y3",
                        "y4",
                        "y5",
                        "y6",
                        "y7",
                        "y8",
                        "y9"
                    ],
                    "type": "string"
                },
                "scaleratio": {
                    "type": "number"
                },
                "separatethousands": {
                    "description": "'If `true`, even 4-digit integers are separated",
                    "type": "boolean"
                },
                "showdividers": {
                    "description": "Determines whether or not a dividers are drawn\nbetween the category levels of this axis.\nOnly has an effect on *multicategory* axes.",
                    "type": "boolean"
                },
                "showexponent": {
                    "description": "If `all`, all exponents are shown besides their significands.\nIf `first`, only the exponent of the first tick is shown.\nIf `last`, only the exponent of the last tick is shown.\nIf `none`, no exponents appear.",
                    "enum": [
                        "all",
                        "first",
                        "last",
                        "none"
                    ],
                    "type": "string"
                },
                "showgrid": {
                    "description": "Determines whether or not grid lines are drawn.\nIf `true`, the grid lines are drawn at every tick mark.",
                    "type": "boolean"
                },
                "showline": {
                    "description": "Determines whether or not a line bounding this axis is drawn.",
                    "type": "boolean"
                },
                "showspikes": {
                    "type": "boolean"
                },
                "showticklabels": {
                    "type": "boolean"
                },
                "showtickprefix": {
                    "description": "If `all`, all tick labels are displayed with a prefix.\nIf `first`, only the first tick is displayed with a prefix.\nIf `last`, only the last tick is displayed with a suffix.\nIf `none`, tick prefixes are hidden.",
                    "enum": [
                        "all",
                        "first",
                        "last",
                        "none"
                    ],
                    "type": "string"
                },
                "showticksuffix": {
                    "description": "Same as `showtickprefix` but for tick suffixes.",
                    "enum": [
                        "all",
                        "first",
                        "last",
                        "none"
                    ],
                    "type": "string"
                },
                "side": {
                    "enum": [
                        "bottom",
                        "clockwise",
                        "counterclockwise",
                        "left",
                        "right",
                        "top"
                    ],
                    "type": "string"
                },
                "spikecolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "spikedash": {
                    "type": "string"
                },
                "spikemode": {
                    "description": "Determines the drawing mode for the spike line.\nIf `toaxis`, the line is drawn from the data point to the axis the\nseries is plotted on.\nIf `across`, the line is drawn across the entire plot area, and\nsupercedes *toaxis*.\nIf `marker`, then a marker dot is drawn on the axis the series is\nplotted on",
                    "enum": [
                        "across",
                        "across+marker",
                        "marker",
                        "toaxis",
                        "toaxis+across",
                        "toaxis+across+marker",
                        "toaxis+marker"
                    ],
                    "type": "string"
                },
                "spikesnap": {
                    "description": "Determines whether spikelines are stuck to the cursor or to the closest datapoints.",
                    "enum": [
                        "cursor",
                        "data",
                        "hovered data"
                    ],
                    "type": "string"
                },
                "spikethickness": {
                    "type": "number"
                },
                "tick0": {
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "tickangle": {
                    "anyOf": [
                        {
                            "const": "auto",
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "tickcolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "tickfont": {
                    "$ref": "#/definitions/Partial<Plotly.Font>"
                },
                "tickformat": {
                    "description": "Sets the tick label formatting rule using d3 formatting mini-languages\nwhich are very similar to those in Python.\nFor numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format\nAnd for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format\nWe add one item to d3's date formatter: `%{n}f` for fractional seconds with n digits.\nFor example, `\"2016-10-13 09:15:23.456\"` with tickformat `\"%H~%M~%S.%2f\"` would display `\"09~15~23.46\"`",
                    "type": "string"
                },
                "tickformatstops": {
                    "description": "Array of `Partial<TickFormatStop>` objects.",
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.TickFormatStop>"
                    },
                    "type": "array"
                },
                "ticklen": {
                    "type": "number"
                },
                "tickmode": {
                    "description": "Ticks",
                    "enum": [
                        "array",
                        "auto",
                        "linear"
                    ],
                    "type": "string"
                },
                "tickprefix": {
                    "type": "string"
                },
                "ticks": {
                    "enum": [
                        "",
                        "inside",
                        "outside"
                    ],
                    "type": "string"
                },
                "ticksuffix": {
                    "description": "Sets a tick label suffix.",
                    "type": "string"
                },
                "ticktext": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "tickvals": {
                    "items": {},
                    "type": "array"
                },
                "tickwidth": {
                    "type": "number"
                },
                "title": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Partial<Plotly.DataTitle>"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "titlefont": {
                    "$ref": "#/definitions/Partial<Plotly.Font>",
                    "description": "Former `titlefont` is now the sub-attribute `font` of `title`.\nTo customize title font properties, please use `title.font` now."
                },
                "type": {
                    "enum": [
                        "-",
                        "category",
                        "date",
                        "linear",
                        "log",
                        "multicategory"
                    ],
                    "type": "string"
                },
                "visible": {
                    "description": "A single toggle to hide the axis while preserving interaction like dragging.\nDefault is true when a cheater plot is present on the axis, otherwise\nfalse",
                    "type": "boolean"
                },
                "zeroline": {
                    "description": "Determines whether or not a line is drawn at along the 0 value\nof this axis.\nIf `true`, the zero line is drawn on top of the grid lines.",
                    "type": "boolean"
                },
                "zerolinecolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ],
                    "description": "Sets the line color of the zero line."
                },
                "zerolinewidth": {
                    "description": "Sets the width (in px) of the zero line.",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.Legend>": {
            "properties": {
                "bgcolor": {
                    "description": "Sets the background color of all hover labels on graph.",
                    "type": "string"
                },
                "bordercolor": {
                    "description": "Sets the border color of all hover labels on graph.",
                    "type": "string"
                },
                "borderwidth": {
                    "type": "number"
                },
                "font": {
                    "$ref": "#/definitions/Partial<Plotly.Font>",
                    "description": "Sets the default hover label font used by all traces on the graph."
                },
                "groupclick": {
                    "enum": [
                        "togglegroup",
                        "toggleitem"
                    ],
                    "type": "string"
                },
                "grouptitlefont": {
                    "$ref": "#/definitions/Partial<Plotly.Font>"
                },
                "itemclick": {
                    "enum": [
                        false,
                        "toggle",
                        "toggleothers"
                    ]
                },
                "itemdoubleclick": {
                    "enum": [
                        false,
                        "toggle",
                        "toggleothers"
                    ]
                },
                "itemsizing": {
                    "enum": [
                        "constant",
                        "trace"
                    ],
                    "type": "string"
                },
                "itemwidth": {
                    "type": "number"
                },
                "orientation": {
                    "enum": [
                        "h",
                        "v"
                    ],
                    "type": "string"
                },
                "title": {
                    "$ref": "#/definitions/Partial<Plotly.LegendTitle>"
                },
                "tracegroupgap": {
                    "type": "number"
                },
                "traceorder": {
                    "enum": [
                        "grouped",
                        "normal",
                        "reversed",
                        "reversed+grouped"
                    ],
                    "type": "string"
                },
                "uirevision": {
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "valign": {
                    "enum": [
                        "bottom",
                        "middle",
                        "top"
                    ],
                    "type": "string"
                },
                "x": {
                    "type": "number"
                },
                "xanchor": {
                    "enum": [
                        "auto",
                        "center",
                        "left",
                        "right"
                    ],
                    "type": "string"
                },
                "y": {
                    "type": "number"
                },
                "yanchor": {
                    "enum": [
                        "auto",
                        "bottom",
                        "middle",
                        "top"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.LegendTitle>": {
            "properties": {
                "font": {
                    "$ref": "#/definitions/Partial<Plotly.Font>"
                },
                "side": {
                    "enum": [
                        "left",
                        "top",
                        "top left"
                    ],
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.Mapbox>": {
            "properties": {
                "accesstoken": {
                    "type": "string"
                },
                "bearing": {
                    "type": "number"
                },
                "center": {
                    "$ref": "#/definitions/Partial<Plotly.MapboxCenter>"
                },
                "domain": {
                    "$ref": "#/definitions/Partial<Plotly.Domain>"
                },
                "layers": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.MapboxLayers>"
                    },
                    "type": "array"
                },
                "pitch": {
                    "type": "number"
                },
                "style": {
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "uirevision": {
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "zoom": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.MapboxCenter>": {
            "properties": {
                "lat": {
                    "type": "number"
                },
                "lon": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.MapboxLayers>": {
            "properties": {
                "below": {
                    "type": "string"
                },
                "circle": {
                    "properties": {
                        "radius": {
                            "type": "number"
                        }
                    },
                    "type": "object"
                },
                "color": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "coordinates": {
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "fill": {
                    "properties": {
                        "outlinecolor": {
                            "$ref": "#/definitions/Plotly.Color"
                        }
                    },
                    "type": "object"
                },
                "line": {
                    "$ref": "#/definitions/Partial<Plotly.ShapeLine>"
                },
                "maxzoom": {
                    "type": "number"
                },
                "minzoom": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "opacity": {
                    "type": "number"
                },
                "source": {
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "sourceattribution": {
                    "type": "string"
                },
                "sourcelayer": {
                    "type": "string"
                },
                "sourcetype": {
                    "enum": [
                        "geojson",
                        "image",
                        "raster",
                        "vecotr"
                    ],
                    "type": "string"
                },
                "symbol": {
                    "$ref": "#/definitions/Partial<Plotly.MapboxSymbol>"
                },
                "templateitemname": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "circle",
                        "fill",
                        "line",
                        "raster",
                        "symbol"
                    ],
                    "type": "string"
                },
                "visible": {
                    "const": true,
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.MapboxSymbol>": {
            "properties": {
                "icon": {
                    "type": "string"
                },
                "iconsize": {
                    "type": "number"
                },
                "placement": {
                    "enum": [
                        "line",
                        "line-center",
                        "point"
                    ],
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "textfont": {
                    "$ref": "#/definitions/Partial<Plotly.Font>"
                },
                "textposition": {
                    "enum": [
                        "bottom center",
                        "bottom left",
                        "bottom right",
                        "middle center",
                        "top center",
                        "top left",
                        "top right"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.Margin>": {
            "properties": {
                "b": {
                    "type": "number"
                },
                "l": {
                    "type": "number"
                },
                "pad": {
                    "type": "number"
                },
                "r": {
                    "type": "number"
                },
                "t": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.ModeBar>": {
            "properties": {
                "activecolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "add": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/definitions/Plotly.ModeBarDefaultButtons"
                            },
                            "type": "array"
                        },
                        {
                            "enum": [
                                "autoScale2d",
                                "hoverClosest3d",
                                "hoverClosestCartesian",
                                "hoverClosestGeo",
                                "hoverClosestGl2d",
                                "hoverClosestPie",
                                "hoverCompareCartesian",
                                "hoverclosest",
                                "hovercompare",
                                "lasso2d",
                                "orbitRotation",
                                "pan2d",
                                "pan3d",
                                "resetCameraDefault3d",
                                "resetCameraLastSave3d",
                                "resetGeo",
                                "resetScale2d",
                                "resetViews",
                                "select2d",
                                "sendDataToCloud",
                                "tableRotation",
                                "toImage",
                                "toggleHover",
                                "toggleSpikelines",
                                "togglehover",
                                "togglespikelines",
                                "v1hovermode",
                                "zoom2d",
                                "zoom3d",
                                "zoomIn2d",
                                "zoomInGeo",
                                "zoomOut2d",
                                "zoomOutGeo"
                            ],
                            "type": "string"
                        }
                    ]
                },
                "bgcolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "color": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "orientation": {
                    "enum": [
                        "h",
                        "v"
                    ],
                    "type": "string"
                },
                "remove": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/definitions/Plotly.ModeBarDefaultButtons"
                            },
                            "type": "array"
                        },
                        {
                            "enum": [
                                "autoScale2d",
                                "hoverClosest3d",
                                "hoverClosestCartesian",
                                "hoverClosestGeo",
                                "hoverClosestGl2d",
                                "hoverClosestPie",
                                "hoverCompareCartesian",
                                "hoverclosest",
                                "hovercompare",
                                "lasso2d",
                                "orbitRotation",
                                "pan2d",
                                "pan3d",
                                "resetCameraDefault3d",
                                "resetCameraLastSave3d",
                                "resetGeo",
                                "resetScale2d",
                                "resetViews",
                                "select2d",
                                "sendDataToCloud",
                                "tableRotation",
                                "toImage",
                                "toggleHover",
                                "toggleSpikelines",
                                "togglehover",
                                "togglespikelines",
                                "v1hovermode",
                                "zoom2d",
                                "zoom3d",
                                "zoomIn2d",
                                "zoomInGeo",
                                "zoomOut2d",
                                "zoomOutGeo"
                            ],
                            "type": "string"
                        }
                    ]
                },
                "uirevision": {
                    "type": [
                        "string",
                        "number"
                    ]
                }
            },
            "type": "object"
        },
        "Partial<Plotly.Padding>": {
            "properties": {
                "b": {
                    "description": "The amount of padding (in px) along the bottom of the component.",
                    "type": "number"
                },
                "editType": {
                    "const": "arraydraw",
                    "type": "string"
                },
                "l": {
                    "description": "The amount of padding (in px) on the left side of the component.",
                    "type": "number"
                },
                "r": {
                    "description": "The amount of padding (in px) on the right side of the component.",
                    "type": "number"
                },
                "t": {
                    "description": "The amount of padding (in px) along the top of the component.",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.Pattern>": {
            "properties": {
                "bgcolor": {
                    "description": "When there is no colorscale sets the color of background pattern fill.\nDefaults to a `marker.color` background when `fillmode` is *overlay*.\nOtherwise, defaults to a transparent background.",
                    "type": "string"
                },
                "fgcolor": {
                    "description": "When there is no colorscale sets the color of foreground pattern fill.\nDefaults to a `marker.color` background when `fillmode` is *replace*.\nOtherwise, defaults to dark grey or white\nto increase contrast with the `bgcolor`.",
                    "type": "string"
                },
                "fgopacity": {
                    "description": "Sets the opacity of the foreground pattern fill.\nDefaults to a 0.5 when `fillmode` is *overlay*.\nOtherwise, defaults to 1.",
                    "type": "string"
                },
                "fillmode": {
                    "description": "Determines whether `marker.color` should be used\nas a default to `bgcolor` or a `fgcolor`.",
                    "enum": [
                        "overlay",
                        "replace"
                    ],
                    "type": "string"
                },
                "shape": {
                    "description": "Sets the shape of the pattern fill.\nBy default, no pattern is used for filling the area.",
                    "enum": [
                        "",
                        "+",
                        "-",
                        ".",
                        "/",
                        "\\",
                        "x",
                        "|"
                    ],
                    "type": "string"
                },
                "size": {
                    "description": "Sets the size of unit squares of the pattern fill in pixels,\nwhich corresponds to the interval of repetition of the pattern.",
                    "type": "number"
                },
                "solidity": {
                    "description": "Sets the solidity of the pattern fill.\nSolidity is roughly the fraction of the area filled by the pattern.\nSolidity of 0 shows only the background color without pattern\nand solidty of 1 shows only the foreground color without pattern.",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.PlotData>": {
            "properties": {
                "autobinx": {
                    "type": "boolean"
                },
                "autocontour": {
                    "type": "boolean"
                },
                "automargin": {
                    "type": "boolean"
                },
                "boxmean": {
                    "enum": [
                        false,
                        "sd",
                        true
                    ]
                },
                "boxpoints": {
                    "enum": [
                        "all",
                        false,
                        "outliers",
                        "suspectedoutliers"
                    ]
                },
                "branchvalues": {
                    "enum": [
                        "remainder",
                        "total"
                    ],
                    "type": "string"
                },
                "cliponaxis": {
                    "type": "boolean"
                },
                "colorbar": {
                    "$ref": "#/definitions/Partial<Plotly.ColorBar>"
                },
                "colorscale": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": [
                                    {
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ],
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "connectgaps": {
                    "type": "boolean"
                },
                "contours": {
                    "$ref": "#/definitions/Partial<{coloring:\"fill\"|\"none\"|\"lines\"|\"heatmap\";end:number;labelfont:Partial<Plotly.Font>;labelformat:string;operation:\"=\"|\"<\"|\">=\"|\">\"|\"<=\"|\"[]\"|\"()\"|\"[)\"|\"(]\"|\"][\"|\")(\"|\"](\"|\")[\";showlabels:boolean;showlines:boolean;size:number;start:number;type:\"levels\"|\"constraint\";value:number|[lowerBound:number,upperBound:number];}>"
                },
                "customdata": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/definitions/Plotly.Datum"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "$ref": "#/definitions/Plotly.Datum"
                                },
                                "type": "array"
                            },
                            "type": "array"
                        }
                    ]
                },
                "delta": {
                    "$ref": "#/definitions/Partial<Plotly.Delta>"
                },
                "direction": {
                    "enum": [
                        "clockwise",
                        "counterclockwise"
                    ],
                    "type": "string"
                },
                "domain": {
                    "$ref": "#/definitions/Partial<{row:number;column:number;x:number[];y:number[];}>"
                },
                "error_x": {
                    "anyOf": [
                        {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Partial<Plotly.ErrorOptions>"
                                },
                                {
                                    "properties": {
                                        "type": {
                                            "enum": [
                                                "constant",
                                                "percent"
                                            ],
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "number"
                                        },
                                        "valueminus": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        },
                        {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Partial<Plotly.ErrorOptions>"
                                },
                                {
                                    "properties": {
                                        "array": {
                                            "items": {
                                                "$ref": "#/definitions/Plotly.Datum"
                                            },
                                            "type": "array"
                                        },
                                        "arrayminus": {
                                            "items": {
                                                "$ref": "#/definitions/Plotly.Datum"
                                            },
                                            "type": "array"
                                        },
                                        "type": {
                                            "const": "data",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        }
                    ]
                },
                "error_y": {
                    "anyOf": [
                        {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Partial<Plotly.ErrorOptions>"
                                },
                                {
                                    "properties": {
                                        "type": {
                                            "enum": [
                                                "constant",
                                                "percent"
                                            ],
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "number"
                                        },
                                        "valueminus": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        },
                        {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Partial<Plotly.ErrorOptions>"
                                },
                                {
                                    "properties": {
                                        "array": {
                                            "items": {
                                                "$ref": "#/definitions/Plotly.Datum"
                                            },
                                            "type": "array"
                                        },
                                        "arrayminus": {
                                            "items": {
                                                "$ref": "#/definitions/Plotly.Datum"
                                            },
                                            "type": "array"
                                        },
                                        "type": {
                                            "const": "data",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        }
                    ]
                },
                "fill": {
                    "enum": [
                        "none",
                        "tonext",
                        "tonextx",
                        "tonexty",
                        "toself",
                        "tozerox",
                        "tozeroy"
                    ],
                    "type": "string"
                },
                "fillcolor": {
                    "type": "string"
                },
                "fillpattern": {
                    "$ref": "#/definitions/Partial<Plotly.Pattern>"
                },
                "gauge": {
                    "$ref": "#/definitions/Partial<Plotly.Gauge>"
                },
                "groupnorm": {
                    "enum": [
                        "",
                        "fraction",
                        "percent"
                    ],
                    "type": "string"
                },
                "histfunc": {
                    "enum": [
                        "avg",
                        "count",
                        "max",
                        "min",
                        "sum"
                    ],
                    "type": "string"
                },
                "hole": {
                    "type": "number"
                },
                "hoverinfo": {
                    "enum": [
                        "all",
                        "name",
                        "none",
                        "skip",
                        "text",
                        "x",
                        "x+name",
                        "x+text",
                        "x+y",
                        "x+y+name",
                        "x+y+text",
                        "x+y+z",
                        "x+y+z+name",
                        "x+y+z+text",
                        "y",
                        "y+name",
                        "y+text",
                        "y+x",
                        "y+x+name",
                        "y+x+text",
                        "y+x+z",
                        "y+x+z+name",
                        "y+x+z+text",
                        "y+z",
                        "y+z+name",
                        "y+z+text",
                        "z",
                        "z+x",
                        "z+x+name",
                        "z+x+text",
                        "z+x+y",
                        "z+x+y+name",
                        "z+x+y+text",
                        "z+y+x",
                        "z+y+x+name",
                        "z+y+x+text"
                    ],
                    "type": "string"
                },
                "hoverlabel": {
                    "$ref": "#/definitions/Partial<Plotly.HoverLabel>"
                },
                "hoveron": {
                    "enum": [
                        "fills",
                        "points"
                    ],
                    "type": "string"
                },
                "hovertemplate": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "hovertext": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "i": {
                    "anyOf": [
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int8Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint8Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint8ClampedArray",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int16Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint16Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Float32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Float64Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    ]
                },
                "ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "j": {
                    "anyOf": [
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int8Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint8Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint8ClampedArray",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int16Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint16Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Float32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Float64Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    ]
                },
                "jitter": {
                    "type": "number"
                },
                "k": {
                    "anyOf": [
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int8Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint8Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint8ClampedArray",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int16Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint16Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Float32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Float64Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    ]
                },
                "labels": {
                    "items": {
                        "$ref": "#/definitions/Plotly.Datum"
                    },
                    "type": "array"
                },
                "lat": {
                    "items": {
                        "$ref": "#/definitions/Plotly.Datum"
                    },
                    "type": "array"
                },
                "legendgroup": {
                    "type": "string"
                },
                "level": {
                    "type": "string"
                },
                "line": {
                    "$ref": "#/definitions/Partial<Plotly.ScatterLine>"
                },
                "line.color": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "line.dash": {
                    "enum": [
                        "dash",
                        "dashdot",
                        "dot",
                        "longdash",
                        "longdashdot",
                        "solid"
                    ],
                    "type": "string"
                },
                "line.shape": {
                    "enum": [
                        "hv",
                        "hvh",
                        "linear",
                        "spline",
                        "vh",
                        "vhv"
                    ],
                    "type": "string"
                },
                "line.simplify": {
                    "type": "boolean"
                },
                "line.smoothing": {
                    "type": "number"
                },
                "line.width": {
                    "type": "number"
                },
                "locationmode": {
                    "enum": [
                        "ISO-3",
                        "USA-states",
                        "country names",
                        "geojson-id"
                    ],
                    "type": "string"
                },
                "locations": {
                    "items": {
                        "$ref": "#/definitions/Plotly.Datum"
                    },
                    "type": "array"
                },
                "lon": {
                    "items": {
                        "$ref": "#/definitions/Plotly.Datum"
                    },
                    "type": "array"
                },
                "marker": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Partial<Plotly.PlotMarker>"
                        },
                        {
                            "$ref": "#/definitions/Partial<BoxPlotMarker>"
                        }
                    ]
                },
                "marker.color": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "marker.colorbar": {
                    "properties": {},
                    "type": "object"
                },
                "marker.colorscale": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": [
                                    {
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ],
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/Plotly.ColorScale"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "marker.line": {
                    "$ref": "#/definitions/Partial<Plotly.ScatterMarkerLine>"
                },
                "marker.line.color": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "marker.line.colorscale": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": [
                                    {
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ],
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/Plotly.ColorScale"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "marker.maxdisplayed": {
                    "type": "number"
                },
                "marker.opacity": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "number"
                            },
                            "type": "array"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "marker.pad.b": {
                    "type": "number"
                },
                "marker.pad.l": {
                    "type": "number"
                },
                "marker.pad.r": {
                    "type": "number"
                },
                "marker.pad.t": {
                    "type": "number"
                },
                "marker.showscale": {
                    "type": "boolean"
                },
                "marker.size": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "number"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": "number"
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "marker.sizemax": {
                    "type": "number"
                },
                "marker.sizemin": {
                    "type": "number"
                },
                "marker.sizemode": {
                    "enum": [
                        "area",
                        "diameter"
                    ],
                    "type": "string"
                },
                "marker.sizeref": {
                    "type": "number"
                },
                "marker.symbol": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/Plotly.MarkerSymbol"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "mode": {
                    "enum": [
                        "delta",
                        "gauge",
                        "gauge+delta",
                        "gauge+number",
                        "gauge+number+delta",
                        "lines",
                        "lines+markers",
                        "markers",
                        "none",
                        "number",
                        "number+delta",
                        "text",
                        "text+lines",
                        "text+lines+markers",
                        "text+markers"
                    ],
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ncontours": {
                    "type": "number"
                },
                "number": {
                    "$ref": "#/definitions/Partial<Plotly.PlotNumber>"
                },
                "offset": {
                    "type": "number"
                },
                "opacity": {
                    "type": "number"
                },
                "orientation": {
                    "enum": [
                        "h",
                        "v"
                    ],
                    "type": "string"
                },
                "parents": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "pointpos": {
                    "type": "number"
                },
                "r": {
                    "items": {
                        "$ref": "#/definitions/Plotly.Datum"
                    },
                    "type": "array"
                },
                "reversescale": {
                    "type": "boolean"
                },
                "rotation": {
                    "type": "number"
                },
                "selectedpoints": {
                    "items": {
                        "$ref": "#/definitions/Plotly.Datum"
                    },
                    "type": "array"
                },
                "showlegend": {
                    "type": "boolean"
                },
                "showscale": {
                    "type": "boolean"
                },
                "stackgaps": {
                    "enum": [
                        "infer zero",
                        "interpolate"
                    ],
                    "type": "string"
                },
                "stackgroup": {
                    "type": "string"
                },
                "text": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "textfont": {
                    "$ref": "#/definitions/Partial<Plotly.Font>"
                },
                "textinfo": {
                    "enum": [
                        "label",
                        "label+percent",
                        "label+text",
                        "label+text+percent",
                        "label+text+value",
                        "label+value",
                        "label+value+percent",
                        "none",
                        "percent",
                        "text",
                        "text+percent",
                        "text+value",
                        "text+value+percent",
                        "value",
                        "value+percent"
                    ],
                    "type": "string"
                },
                "textposition": {
                    "enum": [
                        "auto",
                        "bottom center",
                        "bottom left",
                        "bottom right",
                        "inside",
                        "middle center",
                        "middle left",
                        "middle right",
                        "none",
                        "outside",
                        "top center",
                        "top left",
                        "top right"
                    ],
                    "type": "string"
                },
                "texttemplate": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "theta": {
                    "items": {
                        "$ref": "#/definitions/Plotly.Datum"
                    },
                    "type": "array"
                },
                "title": {
                    "$ref": "#/definitions/Partial<Plotly.DataTitle>"
                },
                "transforms": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.Transform>"
                    },
                    "type": "array"
                },
                "transpose": {
                    "type": "boolean"
                },
                "type": {
                    "enum": [
                        "bar",
                        "barpolar",
                        "box",
                        "candlestick",
                        "carpet",
                        "choropleth",
                        "choroplethmapbox",
                        "cone",
                        "contour",
                        "contourcarpet",
                        "densitymapbox",
                        "funnel",
                        "funnelarea",
                        "heatmap",
                        "heatmapgl",
                        "histogram",
                        "histogram2d",
                        "histogram2dcontour",
                        "image",
                        "indicator",
                        "isosurface",
                        "mesh3d",
                        "ohlc",
                        "parcats",
                        "parcoords",
                        "pie",
                        "pointcloud",
                        "sankey",
                        "scatter",
                        "scatter3d",
                        "scattercarpet",
                        "scattergeo",
                        "scattergl",
                        "scattermapbox",
                        "scatterpolar",
                        "scatterpolargl",
                        "scatterternary",
                        "splom",
                        "streamtube",
                        "sunburst",
                        "surface",
                        "table",
                        "treemap",
                        "violin",
                        "volume",
                        "waterfall"
                    ],
                    "type": "string"
                },
                "value": {
                    "type": "number"
                },
                "values": {
                    "items": {
                        "$ref": "#/definitions/Plotly.Datum"
                    },
                    "type": "array"
                },
                "visible": {
                    "enum": [
                        false,
                        "legendonly",
                        true
                    ]
                },
                "width": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "number"
                            },
                            "type": "array"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "x": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/definitions/Plotly.Datum"
                            },
                            "type": "array"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int8Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint8Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint8ClampedArray",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int16Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint16Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Float32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Float64Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "items": {
                                "items": {
                                    "$ref": "#/definitions/Plotly.Datum"
                                },
                                "type": "array"
                            },
                            "type": "array"
                        }
                    ]
                },
                "xaxis": {
                    "type": "string"
                },
                "xbins": {
                    "properties": {
                        "end": {
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "size": {
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "start": {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    },
                    "type": "object"
                },
                "xgap": {
                    "type": "number"
                },
                "xhoverformat": {
                    "type": "string"
                },
                "xy": {
                    "additionalProperties": false,
                    "patternProperties": {
                        "^[0-9]+$": {
                            "type": "number"
                        }
                    },
                    "properties": {
                        "BYTES_PER_ELEMENT": {
                            "type": "number"
                        },
                        "__@toStringTag@910": {
                            "const": "Float32Array",
                            "type": "string"
                        },
                        "buffer": {
                            "$ref": "#/definitions/ArrayBufferLike"
                        },
                        "byteLength": {
                            "type": "number"
                        },
                        "byteOffset": {
                            "type": "number"
                        },
                        "length": {
                            "type": "number"
                        }
                    },
                    "type": "object"
                },
                "y": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/definitions/Plotly.Datum"
                            },
                            "type": "array"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int8Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint8Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint8ClampedArray",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int16Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint16Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Float32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Float64Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "items": {
                                "items": {
                                    "$ref": "#/definitions/Plotly.Datum"
                                },
                                "type": "array"
                            },
                            "type": "array"
                        }
                    ]
                },
                "yaxis": {
                    "type": "string"
                },
                "ygap": {
                    "type": "number"
                },
                "yhoverformat": {
                    "type": "string"
                },
                "z": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/definitions/Plotly.Datum"
                            },
                            "type": "array"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int8Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint8Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint8ClampedArray",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int16Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint16Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Float32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Float64Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "items": {
                                "items": {
                                    "$ref": "#/definitions/Plotly.Datum"
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "items": {
                                        "$ref": "#/definitions/Plotly.Datum"
                                    },
                                    "type": "array"
                                },
                                "type": "array"
                            },
                            "type": "array"
                        }
                    ]
                },
                "zmax": {
                    "type": "number"
                },
                "zmin": {
                    "type": "number"
                },
                "zsmooth": {
                    "enum": [
                        "best",
                        false,
                        "fast"
                    ]
                }
            },
            "type": "object"
        },
        "Partial<Plotly.PlotMarker>": {
            "properties": {
                "autocolorscale": {
                    "type": "boolean"
                },
                "cauto": {
                    "type": "boolean"
                },
                "cmax": {
                    "type": "number"
                },
                "cmin": {
                    "type": "number"
                },
                "color": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/Plotly.Color"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "colorbar": {
                    "$ref": "#/definitions/Partial<Plotly.ColorBar>"
                },
                "colors": {
                    "items": {
                        "$ref": "#/definitions/Plotly.Color"
                    },
                    "type": "array"
                },
                "colorscale": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": [
                                    {
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ],
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "gradient": {
                    "properties": {
                        "color": {
                            "$ref": "#/definitions/Plotly.Color"
                        },
                        "colorsrc": {},
                        "type": {
                            "enum": [
                                "horizontal",
                                "none",
                                "radial",
                                "vertical"
                            ],
                            "type": "string"
                        },
                        "typesrc": {}
                    },
                    "type": "object"
                },
                "line": {
                    "$ref": "#/definitions/Partial<Plotly.ScatterMarkerLine>"
                },
                "maxdisplayed": {
                    "type": "number"
                },
                "opacity": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "number"
                            },
                            "type": "array"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "pad": {
                    "$ref": "#/definitions/Partial<Plotly.Padding>"
                },
                "pattern": {
                    "$ref": "#/definitions/Partial<Plotly.Pattern>"
                },
                "reversescale": {
                    "type": "boolean"
                },
                "showscale": {
                    "type": "boolean"
                },
                "size": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "number"
                            },
                            "type": "array"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "sizemax": {
                    "type": "number"
                },
                "sizemin": {
                    "type": "number"
                },
                "sizemode": {
                    "enum": [
                        "area",
                        "diameter"
                    ],
                    "type": "string"
                },
                "sizeref": {
                    "type": "number"
                },
                "symbol": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "width": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.PlotNumber>": {
            "properties": {
                "font": {
                    "$ref": "#/definitions/Partial<Plotly.Font>"
                },
                "prefix": {
                    "type": "string"
                },
                "suffix": {
                    "type": "string"
                },
                "valueformat": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.Point>": {
            "properties": {
                "x": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                },
                "z": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.PolarLayout>": {
            "properties": {
                "angularaxis": {
                    "$ref": "#/definitions/Partial<Plotly.LayoutAxis>"
                },
                "bgcolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "domain": {
                    "$ref": "#/definitions/Partial<Plotly.Domain>"
                },
                "gridshape": {
                    "enum": [
                        "circular",
                        "linear"
                    ],
                    "type": "string"
                },
                "hole": {
                    "type": "number"
                },
                "radialaxis": {
                    "$ref": "#/definitions/Partial<Plotly.LayoutAxis>"
                },
                "sector": {
                    "items": {
                        "type": "number"
                    },
                    "type": "array"
                },
                "uirevision": {
                    "type": [
                        "string",
                        "number"
                    ]
                }
            },
            "type": "object"
        },
        "Partial<Plotly.RangeSelector>": {
            "properties": {
                "activecolor": {
                    "type": "string"
                },
                "bgcolor": {
                    "description": "Sets the background color of all hover labels on graph.",
                    "type": "string"
                },
                "bordercolor": {
                    "description": "Sets the border color of all hover labels on graph.",
                    "type": "string"
                },
                "borderwidth": {
                    "type": "number"
                },
                "buttons": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.RangeSelectorButton>"
                    },
                    "type": "array"
                },
                "font": {
                    "$ref": "#/definitions/Partial<Plotly.Font>",
                    "description": "Sets the default hover label font used by all traces on the graph."
                },
                "visible": {
                    "type": "boolean"
                },
                "x": {
                    "type": "number"
                },
                "xanchor": {
                    "enum": [
                        "auto",
                        "center",
                        "left",
                        "right"
                    ],
                    "type": "string"
                },
                "y": {
                    "type": "number"
                },
                "yanchor": {
                    "enum": [
                        "auto",
                        "bottom",
                        "middle",
                        "top"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.RangeSelectorButton>": {
            "properties": {
                "count": {
                    "type": "number"
                },
                "label": {
                    "type": "string"
                },
                "step": {
                    "enum": [
                        "all",
                        "day",
                        "hour",
                        "minute",
                        "month",
                        "second",
                        "year"
                    ],
                    "type": "string"
                },
                "stepmode": {
                    "enum": [
                        "backward",
                        "todate"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.RangeSlider>": {
            "properties": {
                "bgcolor": {
                    "type": "string"
                },
                "bordercolor": {
                    "type": "string"
                },
                "borderwidth": {
                    "type": "number"
                },
                "range": {
                    "items": [
                        {
                            "$ref": "#/definitions/Plotly.Datum"
                        },
                        {
                            "$ref": "#/definitions/Plotly.Datum"
                        }
                    ],
                    "maxItems": 2,
                    "minItems": 2,
                    "type": "array"
                },
                "thickness": {
                    "type": "number"
                },
                "visible": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.ScatterLine>": {
            "properties": {
                "color": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "dash": {
                    "enum": [
                        "dash",
                        "dashdot",
                        "dot",
                        "longdash",
                        "longdashdot",
                        "solid"
                    ],
                    "type": "string"
                },
                "shape": {
                    "enum": [
                        "hv",
                        "hvh",
                        "linear",
                        "spline",
                        "vh",
                        "vhv"
                    ],
                    "type": "string"
                },
                "simplify": {
                    "type": "boolean"
                },
                "smoothing": {
                    "type": "number"
                },
                "width": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.ScatterMarkerLine>": {
            "properties": {
                "autocolorscale": {
                    "type": "boolean"
                },
                "cauto": {
                    "type": "boolean"
                },
                "cmax": {
                    "type": "number"
                },
                "cmid": {
                    "type": "number"
                },
                "cmin": {
                    "type": "number"
                },
                "color": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "coloraxis": {
                    "type": "string"
                },
                "colorscale": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": [
                                    {
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ],
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "reversescale": {
                    "type": "boolean"
                },
                "width": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "number"
                            },
                            "type": "array"
                        },
                        {
                            "type": "number"
                        }
                    ]
                }
            },
            "type": "object"
        },
        "Partial<Plotly.Scene>": {
            "properties": {
                "annotations": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Partial<Plotly.Annotations>"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/Partial<Plotly.Annotations>"
                            },
                            "type": "array"
                        }
                    ]
                },
                "aspectmode": {
                    "enum": [
                        "auto",
                        "cube",
                        "data",
                        "manual"
                    ],
                    "type": "string"
                },
                "aspectratio": {
                    "$ref": "#/definitions/Partial<Plotly.Point>"
                },
                "bgcolor": {
                    "type": "string"
                },
                "camera": {
                    "$ref": "#/definitions/Partial<Plotly.Camera>"
                },
                "captureevents": {
                    "type": "boolean"
                },
                "domain": {
                    "$ref": "#/definitions/Partial<Plotly.Domain>"
                },
                "dragmode": {
                    "enum": [
                        false,
                        "orbit",
                        "pan",
                        "turntable",
                        "zoom"
                    ]
                },
                "hovermode": {
                    "enum": [
                        "closest",
                        false
                    ]
                },
                "xaxis": {
                    "$ref": "#/definitions/Partial<Plotly.SceneAxis>"
                },
                "yaxis": {
                    "$ref": "#/definitions/Partial<Plotly.SceneAxis>"
                },
                "zaxis": {
                    "$ref": "#/definitions/Partial<Plotly.SceneAxis>"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.SceneAxis>": {
            "properties": {
                "autorange": {
                    "enum": [
                        false,
                        "reversed",
                        true
                    ]
                },
                "backgroundcolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "calendar": {
                    "enum": [
                        "chinese",
                        "coptic",
                        "discworld",
                        "ethiopian",
                        "gregorian",
                        "hebrew",
                        "islamic",
                        "jalali",
                        "julian",
                        "mayan",
                        "nanakshahi",
                        "nepali",
                        "persian",
                        "taiwan",
                        "thai",
                        "ummalqura"
                    ],
                    "type": "string"
                },
                "categoryarray": {
                    "items": {},
                    "type": "array"
                },
                "categoryorder": {
                    "description": "Specifies the ordering logic for the case of categorical variables.\nBy default, plotly uses *trace*, which specifies the order that is present in the data supplied.\nSet `categoryorder` to *category ascending* or *category descending* if order should be determined by\nthe alphanumerical order of the category names.\nSet `categoryorder` to *array* to derive the ordering from the attribute `categoryarray`. If a category\nis not found in the `categoryarray` array, the sorting behavior for that attribute will be identical to\nthe *trace* mode. The unspecified categories will follow the categories in `categoryarray`.\nSet `categoryorder` to *total ascending* or *total descending* if order should be determined by the\nnumerical order of the values.\nSimilarly, the order can be determined by the min, max, sum, mean or median of all the values.",
                    "enum": [
                        "array",
                        "category ascending",
                        "category descending",
                        "max ascending",
                        "max descending",
                        "mean ascending",
                        "mean descending",
                        "median ascending",
                        "median descending",
                        "min ascending",
                        "min descending",
                        "sum ascending",
                        "sum descending",
                        "total ascending",
                        "total descending",
                        "trace"
                    ],
                    "type": "string"
                },
                "color": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ],
                    "description": "Sets default for all colors associated with this axis\nall at once: line, font, tick, and grid colors.\nGrid color is lightened by blending this with the plot background\nIndividual pieces can override this."
                },
                "dividercolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ],
                    "description": "Sets the color of the dividers\nOnly has an effect on *multicategory* axes."
                },
                "dividerwidth": {
                    "description": "Sets the width (in px) of the dividers\nOnly has an effect on *multicategory* axes.",
                    "type": "number"
                },
                "dtick": {
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "exponentformat": {
                    "description": "Determines a formatting rule for the tick exponents.\nFor example, consider the number 1,000,000,000.\nIf `none`, it appears as *1,000,000,000*.\nIf `e`, *1e+9*.\nIf `E`, *1E+9*.\nIf `power`, *1x10^9* (with 9 in a super script).\nIf `SI`, *1G*.\nIf `B`, *1B*.",
                    "enum": [
                        "B",
                        "E",
                        "SI",
                        "e",
                        "none",
                        "power"
                    ],
                    "type": "string"
                },
                "fixedrange": {
                    "description": "Determines whether or not this axis is zoom-able.\nIf true, then zoom is disabled.",
                    "type": "boolean"
                },
                "gridcolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ],
                    "description": "Sets the color of the grid lines."
                },
                "gridwidth": {
                    "description": "Sets the width (in px) of the grid lines.",
                    "type": "number"
                },
                "hoverformat": {
                    "description": "Sets the hover text formatting rule using d3 formatting mini-languages\nwhich are very similar to those in Python.\nFor numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format\nAnd for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format\nWe add one item to d3's date formatter: `%{n}f` for fractional seconds with n digits.\nFor example, `\"2016-10-13 09:15:23.456\"` with tickformat `\"%H~%M~%S.%2f\"` would display \"09~15~23.46\"",
                    "type": "string"
                },
                "linecolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ],
                    "description": "Sets the axis line color"
                },
                "linewidth": {
                    "description": "Sets the width (in px) of the axis line.",
                    "type": "number"
                },
                "mirror": {
                    "enum": [
                        "all",
                        "allticks",
                        false,
                        "ticks",
                        true
                    ]
                },
                "nticks": {
                    "type": "number"
                },
                "range": {
                    "items": {},
                    "type": "array"
                },
                "rangemode": {
                    "description": "'If *normal*, the range is computed in relation to the extrema\nof the input data.\nIf *tozero*`, the range extends to 0,\nregardless of the input data\nIf *nonnegative*, the range is non-negative,\nregardless of the input data.\nApplies only to linear axes.",
                    "enum": [
                        "nonnegative",
                        "normal",
                        "tozero"
                    ],
                    "type": "string"
                },
                "separatethousands": {
                    "description": "'If `true`, even 4-digit integers are separated",
                    "type": "boolean"
                },
                "showaxeslabels": {
                    "type": "boolean"
                },
                "showbackground": {
                    "type": "boolean"
                },
                "showdividers": {
                    "description": "Determines whether or not a dividers are drawn\nbetween the category levels of this axis.\nOnly has an effect on *multicategory* axes.",
                    "type": "boolean"
                },
                "showexponent": {
                    "description": "If `all`, all exponents are shown besides their significands.\nIf `first`, only the exponent of the first tick is shown.\nIf `last`, only the exponent of the last tick is shown.\nIf `none`, no exponents appear.",
                    "enum": [
                        "all",
                        "first",
                        "last",
                        "none"
                    ],
                    "type": "string"
                },
                "showgrid": {
                    "description": "Determines whether or not grid lines are drawn.\nIf `true`, the grid lines are drawn at every tick mark.",
                    "type": "boolean"
                },
                "showline": {
                    "description": "Determines whether or not a line bounding this axis is drawn.",
                    "type": "boolean"
                },
                "showspikes": {
                    "type": "boolean"
                },
                "showticklabels": {
                    "type": "boolean"
                },
                "showtickprefix": {
                    "description": "If `all`, all tick labels are displayed with a prefix.\nIf `first`, only the first tick is displayed with a prefix.\nIf `last`, only the last tick is displayed with a suffix.\nIf `none`, tick prefixes are hidden.",
                    "enum": [
                        "all",
                        "first",
                        "last",
                        "none"
                    ],
                    "type": "string"
                },
                "showticksuffix": {
                    "description": "Same as `showtickprefix` but for tick suffixes.",
                    "enum": [
                        "all",
                        "first",
                        "last",
                        "none"
                    ],
                    "type": "string"
                },
                "spikecolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "spikedash": {
                    "type": "string"
                },
                "spikemode": {
                    "description": "Determines the drawing mode for the spike line.\nIf `toaxis`, the line is drawn from the data point to the axis the\nseries is plotted on.\nIf `across`, the line is drawn across the entire plot area, and\nsupercedes *toaxis*.\nIf `marker`, then a marker dot is drawn on the axis the series is\nplotted on",
                    "enum": [
                        "across",
                        "across+marker",
                        "marker",
                        "toaxis",
                        "toaxis+across",
                        "toaxis+across+marker",
                        "toaxis+marker"
                    ],
                    "type": "string"
                },
                "spikesides": {
                    "type": "boolean"
                },
                "spikesnap": {
                    "description": "Determines whether spikelines are stuck to the cursor or to the closest datapoints.",
                    "enum": [
                        "cursor",
                        "data",
                        "hovered data"
                    ],
                    "type": "string"
                },
                "spikethickness": {
                    "type": "number"
                },
                "tick0": {
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "tickangle": {
                    "anyOf": [
                        {
                            "const": "auto",
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "tickcolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "tickfont": {
                    "$ref": "#/definitions/Partial<Plotly.Font>"
                },
                "tickformat": {
                    "description": "Sets the tick label formatting rule using d3 formatting mini-languages\nwhich are very similar to those in Python.\nFor numbers, see: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format\nAnd for dates see: https://github.com/d3/d3-3.x-api-reference/blob/master/Time-Formatting.md#format\nWe add one item to d3's date formatter: `%{n}f` for fractional seconds with n digits.\nFor example, `\"2016-10-13 09:15:23.456\"` with tickformat `\"%H~%M~%S.%2f\"` would display `\"09~15~23.46\"`",
                    "type": "string"
                },
                "tickformatstops": {
                    "description": "Array of `Partial<TickFormatStop>` objects.",
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.TickFormatStop>"
                    },
                    "type": "array"
                },
                "ticklen": {
                    "type": "number"
                },
                "tickmode": {
                    "description": "Ticks",
                    "enum": [
                        "array",
                        "auto",
                        "linear"
                    ],
                    "type": "string"
                },
                "tickprefix": {
                    "type": "string"
                },
                "ticks": {
                    "enum": [
                        "",
                        "inside",
                        "outside"
                    ],
                    "type": "string"
                },
                "ticksuffix": {
                    "description": "Sets a tick label suffix.",
                    "type": "string"
                },
                "ticktext": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "tickvals": {
                    "items": {},
                    "type": "array"
                },
                "tickwidth": {
                    "type": "number"
                },
                "title": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Partial<Plotly.DataTitle>"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "titlefont": {
                    "$ref": "#/definitions/Partial<Plotly.Font>",
                    "description": "Former `titlefont` is now the sub-attribute `font` of `title`.\nTo customize title font properties, please use `title.font` now."
                },
                "type": {
                    "enum": [
                        "-",
                        "category",
                        "date",
                        "linear",
                        "log",
                        "multicategory"
                    ],
                    "type": "string"
                },
                "visible": {
                    "description": "A single toggle to hide the axis while preserving interaction like dragging.\nDefault is true when a cheater plot is present on the axis, otherwise\nfalse",
                    "type": "boolean"
                },
                "zeroline": {
                    "description": "Determines whether or not a line is drawn at along the 0 value\nof this axis.\nIf `true`, the zero line is drawn on top of the grid lines.",
                    "type": "boolean"
                },
                "zerolinecolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ],
                    "description": "Sets the line color of the zero line."
                },
                "zerolinewidth": {
                    "description": "Sets the width (in px) of the zero line.",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.Shape>": {
            "properties": {
                "fillcolor": {
                    "type": "string"
                },
                "layer": {
                    "enum": [
                        "above",
                        "below"
                    ],
                    "type": "string"
                },
                "line": {
                    "$ref": "#/definitions/Partial<Plotly.ShapeLine>"
                },
                "name": {
                    "type": "string"
                },
                "opacity": {
                    "type": "number"
                },
                "path": {
                    "type": "string"
                },
                "templateitemname": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "circle",
                        "line",
                        "path",
                        "rect"
                    ],
                    "type": "string"
                },
                "visible": {
                    "type": "boolean"
                },
                "x0": {
                    "anyOf": [
                        {
                            "format": "date-time",
                            "type": "string"
                        },
                        {
                            "type": [
                                "null",
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "x1": {
                    "anyOf": [
                        {
                            "format": "date-time",
                            "type": "string"
                        },
                        {
                            "type": [
                                "null",
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "xanchor": {
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "xref": {
                    "enum": [
                        "paper",
                        "x",
                        "x10",
                        "x11",
                        "x2",
                        "x3",
                        "x4",
                        "x5",
                        "x6",
                        "x7",
                        "x8",
                        "x9"
                    ],
                    "type": "string"
                },
                "xsizemode": {
                    "enum": [
                        "pixel",
                        "scaled"
                    ],
                    "type": "string"
                },
                "y0": {
                    "anyOf": [
                        {
                            "format": "date-time",
                            "type": "string"
                        },
                        {
                            "type": [
                                "null",
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "y1": {
                    "anyOf": [
                        {
                            "format": "date-time",
                            "type": "string"
                        },
                        {
                            "type": [
                                "null",
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "yanchor": {
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "yref": {
                    "enum": [
                        "paper",
                        "y",
                        "y10",
                        "y11",
                        "y2",
                        "y3",
                        "y4",
                        "y5",
                        "y6",
                        "y7",
                        "y8",
                        "y9"
                    ],
                    "type": "string"
                },
                "ysizemode": {
                    "enum": [
                        "pixel",
                        "scaled"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.ShapeLine>": {
            "properties": {
                "color": {
                    "type": "string"
                },
                "dash": {
                    "enum": [
                        "dash",
                        "dashdot",
                        "dot",
                        "longdash",
                        "longdashdot",
                        "solid"
                    ],
                    "type": "string"
                },
                "width": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.Slider>": {
            "properties": {
                "active": {
                    "description": "Determines which button (by index starting from 0) is\nconsidered active.",
                    "type": "number"
                },
                "activebgcolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ],
                    "description": "Sets the background color of the slider grip\nwhile dragging."
                },
                "bgcolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ],
                    "description": "Sets the background color of the slider."
                },
                "bordercolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ],
                    "description": "Sets the color of the border enclosing the slider."
                },
                "borderwidth": {
                    "description": "Sets the width (in px) of the border enclosing the slider.",
                    "type": "number"
                },
                "currentvalue": {
                    "$ref": "#/definitions/Partial<Plotly.CurrentValue>"
                },
                "font": {
                    "$ref": "#/definitions/Plotly.Font",
                    "description": "Sets the font of the slider step labels."
                },
                "len": {
                    "description": "Sets the length of the slider\nThis measure excludes the padding of both ends.\nThat is, the slider's length is this length minus the\npadding on both ends.",
                    "type": "number"
                },
                "lenmode": {
                    "description": "Determines whether this slider length\nis set in units of plot *fraction* or in *pixels.\nUse `len` to set the value.",
                    "enum": [
                        "fraction",
                        "pixels"
                    ],
                    "type": "string"
                },
                "minorticklen": {
                    "description": "Sets the length in pixels of minor step tick marks",
                    "type": "number"
                },
                "pad": {
                    "$ref": "#/definitions/Partial<Plotly.Padding>",
                    "description": "Set the padding of the slider component along each side."
                },
                "steps": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.SliderStep>"
                    },
                    "type": "array"
                },
                "tickcolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ],
                    "description": "Sets the color of the border enclosing the slider."
                },
                "ticklen": {
                    "description": "Sets the length in pixels of step tick marks",
                    "type": "number"
                },
                "tickwidth": {
                    "description": "Sets the tick width (in px).",
                    "type": "number"
                },
                "transition": {
                    "$ref": "#/definitions/Plotly.Transition"
                },
                "visible": {
                    "description": "Determines whether or not the slider is visible.",
                    "type": "boolean"
                },
                "x": {
                    "description": "Sets the x position (in normalized coordinates) of the slider.",
                    "type": "number"
                },
                "xanchor": {
                    "description": "Sets the slider's horizontal position anchor.\nThis anchor binds the `x` position to the *left*, *center*\nor *right* of the range selector.",
                    "enum": [
                        "auto",
                        "center",
                        "left",
                        "right"
                    ],
                    "type": "string"
                },
                "y": {
                    "description": "Sets the y position (in normalized coordinates) of the slider.",
                    "type": "number"
                },
                "yanchor": {
                    "description": "Sets the slider's vertical position anchor\nThis anchor binds the `y` position to the *top*, *middle*\nor *bottom* of the range selector.",
                    "enum": [
                        "auto",
                        "bottom",
                        "middle",
                        "top"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.SliderStep>": {
            "properties": {
                "args": {
                    "description": "Sets the arguments values to be passed to the Plotly\nmethod set in `method` on slide.",
                    "items": {},
                    "type": "array"
                },
                "execute": {
                    "description": "When true, the API method is executed. When false, all other behaviors are the same\nand command execution is skipped. This may be useful when hooking into, for example,\nthe `plotly_sliderchange` method and executing the API command manually without losing\nthe benefit of the slider automatically binding to the state of the plot through the\nspecification of `method` and `args`.",
                    "type": "boolean"
                },
                "label": {
                    "description": "Sets the text label to appear on the slider",
                    "type": "string"
                },
                "method": {
                    "description": "Sets the Plotly method to be called when the slider value is changed.\nIf the `skip` method is used, the API slider will function as normal\nbut will perform no API calls and will not bind automatically to state\nupdates. This may be used to create a component interface and attach to\nslider events manually via JavaScript.",
                    "enum": [
                        "animate",
                        "relayout",
                        "restyle",
                        "skip",
                        "update"
                    ],
                    "type": "string"
                },
                "value": {
                    "description": "Sets the value of the slider step, used to refer to the step programatically.\nDefaults to the slider label if not provided.",
                    "type": "string"
                },
                "visible": {
                    "description": "Determines whether or not this step is included in the slider.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.Threshold>": {
            "properties": {
                "line": {
                    "$ref": "#/definitions/Partial<Plotly.GaugeLine>"
                },
                "thickness": {
                    "type": "number"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.TickFormatStop>": {
            "properties": {
                "dtickrange": {
                    "description": "Range [`min`, `max`], where `min`, `max` - dtick values\nwhich describe some zoom level, it is possible to omit `min` or `max`\nvalue by passing `null`",
                    "items": [
                        {
                            "type": [
                                "null",
                                "string",
                                "number"
                            ]
                        },
                        {
                            "type": [
                                "null",
                                "string",
                                "number"
                            ]
                        }
                    ],
                    "maxItems": 2,
                    "minItems": 2,
                    "type": "array"
                },
                "enabled": {
                    "description": "Determines whether or not this stop is used. If `false`,\nthis stop is ignored even within its `dtickrange`.",
                    "type": "boolean"
                },
                "name": {
                    "description": "When used in a template, named items are created in the output figure\nin addition to any items the figure already has in this array.\nYou can modify these items in the output figure by making\nyour own item with `templateitemname` matching this `name`\nalongside your modifications (including `visible: false` or `enabled: false` to hide it).\nHas no effect outside of a template.",
                    "type": "string"
                },
                "templateitemname": {
                    "description": "Used to refer to a named item in this array in the template.\nNamed items from the template will be created even without\na matching item in the input figure, but you can modify one by\nmaking an item with `templateitemname` matching its `name`,\nalongside your modifications (including `visible: false` or `enabled: false` to hide it).\nIf there is no template or no matching item, this item will be hidden\nunless you explicitly show it with `visible: true`.",
                    "type": "string"
                },
                "value": {
                    "description": "dtickformat for described zoom level, the same as `tickformat`",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Partial<Plotly.Transform>": {
            "properties": {
                "aggregations": {
                    "items": {
                        "$ref": "#/definitions/Plotly.TransformAggregation"
                    },
                    "type": "array"
                },
                "enabled": {
                    "type": "boolean"
                },
                "groups": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "type": "number"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "nameformat": {
                    "type": "string"
                },
                "operation": {
                    "type": "string"
                },
                "order": {
                    "enum": [
                        "ascending",
                        "descending"
                    ],
                    "type": "string"
                },
                "preservegaps": {
                    "type": "boolean"
                },
                "styles": {
                    "items": {
                        "$ref": "#/definitions/Plotly.TransformStyle"
                    },
                    "type": "array"
                },
                "target": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "type": "number"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "type": {
                    "enum": [
                        "aggregate",
                        "filter",
                        "groupby",
                        "sort"
                    ],
                    "type": "string"
                },
                "value": {}
            },
            "type": "object"
        },
        "Partial<{color:Plotly.Color;width:number;outliercolor:Plotly.Color;outlierwidth:number;}>": {
            "properties": {
                "color": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "outliercolor": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "outlierwidth": {
                    "type": "number"
                },
                "width": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Partial<{coloring:\"fill\"|\"none\"|\"lines\"|\"heatmap\";end:number;labelfont:Partial<Plotly.Font>;labelformat:string;operation:\"=\"|\"<\"|\">=\"|\">\"|\"<=\"|\"[]\"|\"()\"|\"[)\"|\"(]\"|\"][\"|\")(\"|\"](\"|\")[\";showlabels:boolean;showlines:boolean;size:number;start:number;type:\"levels\"|\"constraint\";value:number|[lowerBound:number,upperBound:number];}>": {
            "properties": {
                "coloring": {
                    "enum": [
                        "fill",
                        "heatmap",
                        "lines",
                        "none"
                    ],
                    "type": "string"
                },
                "end": {
                    "type": "number"
                },
                "labelfont": {
                    "$ref": "#/definitions/Partial<Plotly.Font>"
                },
                "labelformat": {
                    "type": "string"
                },
                "operation": {
                    "enum": [
                        "()",
                        "(]",
                        ")(",
                        ")[",
                        "<",
                        "<=",
                        "=",
                        ">",
                        ">=",
                        "[)",
                        "[]",
                        "](",
                        "]["
                    ],
                    "type": "string"
                },
                "showlabels": {
                    "type": "boolean"
                },
                "showlines": {
                    "type": "boolean"
                },
                "size": {
                    "type": "number"
                },
                "start": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "constraint",
                        "levels"
                    ],
                    "type": "string"
                },
                "value": {
                    "anyOf": [
                        {
                            "items": [
                                {
                                    "type": "number"
                                },
                                {
                                    "type": "number"
                                }
                            ],
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array"
                        },
                        {
                            "type": "number"
                        }
                    ]
                }
            },
            "type": "object"
        },
        "Partial<{filename:string;scale:number;format:\"svg\"|\"png\"|\"jpeg\"|\"webp\";height:number;width:number;}>": {
            "properties": {
                "filename": {
                    "type": "string"
                },
                "format": {
                    "enum": [
                        "jpeg",
                        "png",
                        "svg",
                        "webp"
                    ],
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "scale": {
                    "type": "number"
                },
                "width": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Partial<{row:number;column:number;x:number[];y:number[];}>": {
            "properties": {
                "column": {
                    "type": "number"
                },
                "row": {
                    "type": "number"
                },
                "x": {
                    "items": {
                        "type": "number"
                    },
                    "type": "array"
                },
                "y": {
                    "items": {
                        "type": "number"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Partial<{rows:number;roworder:\"toptobottom\"|\"bottomtotop\";columns:number;subplots:string[];xaxes:string[];yaxes:string[];pattern:\"independent\"|\"coupled\";xgap:number;ygap:number;domain:Partial<{x:number[];y:number[];}>;xside:\"top\"|\"bottom\"|\"bottomplot\"|\"topplot\";yside:\"left\"|\"right\"|\"leftplot\"|\"rightplot\";}>": {
            "properties": {
                "columns": {
                    "type": "number"
                },
                "domain": {
                    "$ref": "#/definitions/Partial<{x:number[];y:number[];}>"
                },
                "pattern": {
                    "enum": [
                        "coupled",
                        "independent"
                    ],
                    "type": "string"
                },
                "roworder": {
                    "enum": [
                        "bottom to top",
                        "top to bottom"
                    ],
                    "type": "string"
                },
                "rows": {
                    "type": "number"
                },
                "subplots": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "xaxes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "xgap": {
                    "type": "number"
                },
                "xside": {
                    "enum": [
                        "bottom",
                        "bottom plot",
                        "top",
                        "top plot"
                    ],
                    "type": "string"
                },
                "yaxes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ygap": {
                    "type": "number"
                },
                "yside": {
                    "enum": [
                        "left",
                        "left plot",
                        "right",
                        "right plot"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Partial<{text:string;font:Partial<Plotly.Font>;xref:\"container\"|\"paper\";yref:\"container\"|\"paper\";x:number;y:number;xanchor:\"center\"|\"auto\"|\"left\"|\"right\";yanchor:\"auto\"|\"top\"|\"middle\"|\"bottom\";pad:Partial<Plotly.Padding>;}>": {
            "properties": {
                "font": {
                    "$ref": "#/definitions/Partial<Plotly.Font>"
                },
                "pad": {
                    "$ref": "#/definitions/Partial<Plotly.Padding>"
                },
                "text": {
                    "type": "string"
                },
                "x": {
                    "type": "number"
                },
                "xanchor": {
                    "enum": [
                        "auto",
                        "center",
                        "left",
                        "right"
                    ],
                    "type": "string"
                },
                "xref": {
                    "enum": [
                        "container",
                        "paper"
                    ],
                    "type": "string"
                },
                "y": {
                    "type": "number"
                },
                "yanchor": {
                    "enum": [
                        "auto",
                        "bottom",
                        "middle",
                        "top"
                    ],
                    "type": "string"
                },
                "yref": {
                    "enum": [
                        "container",
                        "paper"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Partial<{x:number[];y:number[];}>": {
            "properties": {
                "x": {
                    "items": {
                        "type": "number"
                    },
                    "type": "array"
                },
                "y": {
                    "items": {
                        "type": "number"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Plotly.Color": {
            "anyOf": [
                {
                    "items": {
                        "type": [
                            "null",
                            "string",
                            "number"
                        ]
                    },
                    "type": "array"
                },
                {
                    "items": {
                        "items": {
                            "type": [
                                "null",
                                "string",
                                "number"
                            ]
                        },
                        "type": "array"
                    },
                    "type": "array"
                },
                {
                    "type": [
                        "string",
                        "number"
                    ]
                }
            ]
        },
        "Plotly.ColorScale": {
            "anyOf": [
                {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                {
                    "items": {
                        "items": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "maxItems": 2,
                        "minItems": 2,
                        "type": "array"
                    },
                    "type": "array"
                },
                {
                    "type": "string"
                }
            ]
        },
        "Plotly.Datum": {
            "anyOf": [
                {
                    "format": "date-time",
                    "type": "string"
                },
                {
                    "type": [
                        "null",
                        "string",
                        "number"
                    ]
                }
            ]
        },
        "Plotly.Font": {
            "properties": {
                "color": {
                    "$ref": "#/definitions/Plotly.Color"
                },
                "family": {
                    "default": "Arial, sans-serif",
                    "description": "HTML font family - the typeface that will be applied by the web browser.\nThe web browser will only be able to apply a font if it is available on the system\nwhich it operates. Provide multiple font families, separated by commas, to indicate\nthe preference in which to apply fonts if they aren't available on the system.\nThe plotly service (at https://plot.ly or on-premise) generates images on a server,\nwhere only a select number of fonts are installed and supported.\nThese include *Arial*, *Balto*, *Courier New*, *Droid Sans*, *Droid Serif*,\n*Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*,\n*PT Sans Narrow*, *Raleway*, *Times New Roman*.",
                    "type": "string"
                },
                "size": {
                    "default": 13,
                    "description": "number greater than or equal to 1",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Plotly.Icon": {
            "properties": {
                "ascent": {
                    "type": "number"
                },
                "descent": {
                    "type": "number"
                },
                "height": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "svg": {
                    "type": "string"
                },
                "transform": {
                    "type": "string"
                },
                "width": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Plotly.MarkerSymbol": {
            "anyOf": [
                {
                    "items": {
                        "type": [
                            "string",
                            "number"
                        ]
                    },
                    "type": "array"
                },
                {
                    "type": [
                        "string",
                        "number"
                    ]
                }
            ]
        },
        "Plotly.ModeBarButton": {
            "properties": {
                "attr": {
                    "description": "attribute associated with button,\nuse this with 'val' to keep track of the state",
                    "type": "string"
                },
                "click": {
                    "description": "click handler associated with the button, a function of\n'gd' (the main graph object) and\n'ev' (the event object)",
                    "type": "object"
                },
                "gravity": {
                    "description": "icon positioning",
                    "type": "string"
                },
                "icon": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Plotly.Icon"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "svg icon object associated with the button\ncan be linked to Plotly.Icons to use the default plotly icons"
                },
                "name": {
                    "description": "name / id of the buttons (for tracking)",
                    "type": "string"
                },
                "title": {
                    "description": "text that appears while hovering over the button,\nenter null, false or '' for no hover text",
                    "type": "string"
                },
                "toggle": {
                    "description": "is the button a toggle button?",
                    "type": "boolean"
                },
                "val": {
                    "description": "initial 'attr' value, can be a function of gd"
                }
            },
            "type": "object"
        },
        "Plotly.ModeBarButtonAny": {
            "anyOf": [
                {
                    "$ref": "#/definitions/Plotly.ModeBarButton"
                },
                {
                    "enum": [
                        "autoScale2d",
                        "hoverClosest3d",
                        "hoverClosestCartesian",
                        "hoverClosestGeo",
                        "hoverClosestGl2d",
                        "hoverClosestPie",
                        "hoverCompareCartesian",
                        "hoverclosest",
                        "hovercompare",
                        "lasso2d",
                        "orbitRotation",
                        "pan2d",
                        "pan3d",
                        "resetCameraDefault3d",
                        "resetCameraLastSave3d",
                        "resetGeo",
                        "resetScale2d",
                        "resetViews",
                        "select2d",
                        "sendDataToCloud",
                        "tableRotation",
                        "toImage",
                        "toggleHover",
                        "toggleSpikelines",
                        "togglehover",
                        "togglespikelines",
                        "v1hovermode",
                        "zoom2d",
                        "zoom3d",
                        "zoomIn2d",
                        "zoomInGeo",
                        "zoomOut2d",
                        "zoomOutGeo"
                    ],
                    "type": "string"
                }
            ]
        },
        "Plotly.ModeBarDefaultButtons": {
            "enum": [
                "autoScale2d",
                "hoverClosest3d",
                "hoverClosestCartesian",
                "hoverClosestGeo",
                "hoverClosestGl2d",
                "hoverClosestPie",
                "hoverCompareCartesian",
                "hoverclosest",
                "hovercompare",
                "lasso2d",
                "orbitRotation",
                "pan2d",
                "pan3d",
                "resetCameraDefault3d",
                "resetCameraLastSave3d",
                "resetGeo",
                "resetScale2d",
                "resetViews",
                "select2d",
                "sendDataToCloud",
                "tableRotation",
                "toImage",
                "toggleHover",
                "toggleSpikelines",
                "togglehover",
                "togglespikelines",
                "v1hovermode",
                "zoom2d",
                "zoom3d",
                "zoomIn2d",
                "zoomInGeo",
                "zoomOut2d",
                "zoomOutGeo"
            ],
            "type": "string"
        },
        "Plotly.Template": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/{table?:Partial<Plotly.PlotData>[]|undefined;image?:Partial<Plotly.PlotData>[]|undefined;bar?:Partial<Plotly.PlotData>[]|undefined;barpolar?:Partial<Plotly.PlotData>[]|undefined;box?:Partial<Plotly.PlotData>[]|undefined;candlestick?:Partial<Plotly.PlotData>[]|undefined;carpet?:Partial<Plotly.PlotData>[]|undefined;choropleth?:Partial<Plotly.PlotData>[]|undefined;choroplethmapbox?:Partial<Plotly.PlotData>[]|undefined;cone?:Partial<Plotly.PlotData>[]|undefined;contour?:Partial<Plotly.PlotData>[]|undefined;contourcarpet?:Partial<Plotly.PlotData>[]|undefined;densitymapbox?:Partial<Plotly.PlotData>[]|undefined;funnel?:Partial<Plotly.PlotData>[]|undefined;funnelarea?:Partial<Plotly.PlotData>[]|undefined;heatmap?:Partial<Plotly.PlotData>[]|undefined;heatmapgl?:Partial<Plotly.PlotData>[]|undefined;histogram?:Partial<Plotly.PlotData>[]|undefined;histogram2d?:Partial<Plotly.PlotData>[]|undefined;histogram2dcontour?:Partial<Plotly.PlotData>[]|undefined;indicator?:Partial<Plotly.PlotData>[]|undefined;isosurface?:Partial<Plotly.PlotData>[]|undefined;mesh3d?:Partial<Plotly.PlotData>[]|undefined;ohlc?:Partial<Plotly.PlotData>[]|undefined;parcats?:Partial<Plotly.PlotData>[]|undefined;parcoords?:Partial<Plotly.PlotData>[]|undefined;pie?:Partial<Plotly.PlotData>[]|undefined;pointcloud?:Partial<Plotly.PlotData>[]|undefined;sankey?:Partial<Plotly.PlotData>[]|undefined;scatter?:Partial<Plotly.PlotData>[]|undefined;scatter3d?:Partial<Plotly.PlotData>[]|undefined;scattercarpet?:Partial<Plotly.PlotData>[]|undefined;scattergeo?:Partial<Plotly.PlotData>[]|undefined;scattergl?:Partial<Plotly.PlotData>[]|undefined;scattermapbox?:Partial<Plotly.PlotData>[]|undefined;scatterpolar?:Partial<Plotly.PlotData>[]|undefined;scatterpolargl?:Partial<Plotly.PlotData>[]|undefined;scatterternary?:Partial<Plotly.PlotData>[]|undefined;splom?:Partial<Plotly.PlotData>[]|undefined;streamtube?:Partial<Plotly.PlotData>[]|undefined;sunburst?:Partial<Plotly.PlotData>[]|undefined;surface?:Partial<Plotly.PlotData>[]|undefined;treemap?:Partial<Plotly.PlotData>[]|undefined;violin?:Partial<Plotly.PlotData>[]|undefined;volume?:Partial<Plotly.PlotData>[]|undefined;waterfall?:Partial<Plotly.PlotData>[]|undefined;}"
                },
                "layout": {
                    "$ref": "#/definitions/Partial<Plotly.Layout>"
                }
            },
            "type": "object"
        },
        "Plotly.TransformAggregation": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "func": {
                    "enum": [
                        "avg",
                        "count",
                        "first",
                        "last",
                        "max",
                        "median",
                        "min",
                        "mode",
                        "rms",
                        "stddev",
                        "sum"
                    ],
                    "type": "string"
                },
                "funcmode": {
                    "enum": [
                        "population",
                        "sample"
                    ],
                    "type": "string"
                },
                "target": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Plotly.TransformStyle": {
            "description": "These interfaces are based on attribute descriptions in\nhttps://github.com/plotly/plotly.js/tree/9d6144304308fc3007f0facf2535d38ea3e9b26c/src/transforms",
            "properties": {
                "target": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "type": "number"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "value": {
                    "$ref": "#/definitions/Partial<Plotly.PlotData>"
                }
            },
            "type": "object"
        },
        "Plotly.Transition": {
            "properties": {
                "duration": {
                    "description": "Sets the duration of the slider transition",
                    "type": "number"
                },
                "easing": {
                    "description": "Sets the easing function of the slider transition",
                    "enum": [
                        "back",
                        "back-in",
                        "back-in-out",
                        "back-out",
                        "bounce",
                        "bounce-in",
                        "bounce-in-out",
                        "bounce-out",
                        "circle",
                        "circle-in",
                        "circle-in-out",
                        "circle-out",
                        "cubic",
                        "cubic-in",
                        "cubic-in-out",
                        "cubic-out",
                        "elastic",
                        "elastic-in",
                        "elastic-in-out",
                        "elastic-out",
                        "exp",
                        "exp-in",
                        "exp-in-out",
                        "exp-out",
                        "linear",
                        "linear-in",
                        "linear-in-out",
                        "linear-out",
                        "quad",
                        "quad-in",
                        "quad-in-out",
                        "quad-out",
                        "sin",
                        "sin-in",
                        "sin-in-out",
                        "sin-out"
                    ],
                    "type": "string"
                },
                "ordering": {
                    "description": "Determines whether the figure's layout or traces smoothly transitions during updates that make both traces\nand layout change. Default is \"layout first\".",
                    "enum": [
                        "layout first",
                        "traces first"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Record<string,any>": {
            "type": "object"
        },
        "SharedArrayBuffer": {
            "properties": {
                "__@species@934": {
                    "$ref": "#/definitions/SharedArrayBuffer"
                },
                "__@toStringTag@910": {
                    "const": "SharedArrayBuffer",
                    "type": "string"
                },
                "byteLength": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "With$fn<{entity?:string|undefined;attribute?:string|undefined;statistic?:\"state\"|\"sum\"|\"min\"|\"max\"|\"mean\"|undefined;period?:\"5minute\"|\"hour\"|\"day\"|\"week\"|\"month\"|AutoPeriodConfig|\"auto\"|undefined;unit_of_measurement?:string|undefined;internal?:boolean|undefined;show_value?:boolean|{right_margin:number;}|undefined;offset?:TimeDurationStr|undefined;extend_to_present?:boolean|undefined;filters?:(string|Record<string,any>)[]|undefined;on_legend_click?:Function|undefined;on_legend_dblclick?:Function|undefined;on_click?:Function|undefined;}&Partial<Plotly.PlotData>>": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "autobinx": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "autocontour": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "automargin": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "boxmean": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "enum": [
                                false,
                                "sd",
                                true
                            ]
                        }
                    ]
                },
                "boxpoints": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "enum": [
                                "all",
                                false,
                                "outliers",
                                "suspectedoutliers"
                            ]
                        }
                    ]
                },
                "branchvalues": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "enum": [
                                "remainder",
                                "total"
                            ],
                            "type": "string"
                        }
                    ]
                },
                "cliponaxis": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "colorbar": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "$ref": "#/definitions/Partial<Plotly.ColorBar>"
                        }
                    ]
                },
                "colorscale": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": [
                                    {
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ],
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "connectgaps": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "contours": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "$ref": "#/definitions/Partial<{coloring:\"fill\"|\"none\"|\"lines\"|\"heatmap\";end:number;labelfont:Partial<Plotly.Font>;labelformat:string;operation:\"=\"|\"<\"|\">=\"|\">\"|\"<=\"|\"[]\"|\"()\"|\"[)\"|\"(]\"|\"][\"|\")(\"|\"](\"|\")[\";showlabels:boolean;showlines:boolean;size:number;start:number;type:\"levels\"|\"constraint\";value:number|[lowerBound:number,upperBound:number];}>"
                        }
                    ]
                },
                "customdata": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/Plotly.Datum"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "$ref": "#/definitions/Plotly.Datum"
                                },
                                "type": "array"
                            },
                            "type": "array"
                        }
                    ]
                },
                "delta": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "$ref": "#/definitions/Partial<Plotly.Delta>"
                        }
                    ]
                },
                "direction": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "enum": [
                                "clockwise",
                                "counterclockwise"
                            ],
                            "type": "string"
                        }
                    ]
                },
                "domain": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "$ref": "#/definitions/Partial<{row:number;column:number;x:number[];y:number[];}>"
                        }
                    ]
                },
                "entity": {
                    "type": "string"
                },
                "error_x": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Partial<Plotly.ErrorOptions>"
                                },
                                {
                                    "properties": {
                                        "type": {
                                            "enum": [
                                                "constant",
                                                "percent"
                                            ],
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "number"
                                        },
                                        "valueminus": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        },
                        {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Partial<Plotly.ErrorOptions>"
                                },
                                {
                                    "properties": {
                                        "array": {
                                            "items": {
                                                "$ref": "#/definitions/Plotly.Datum"
                                            },
                                            "type": "array"
                                        },
                                        "arrayminus": {
                                            "items": {
                                                "$ref": "#/definitions/Plotly.Datum"
                                            },
                                            "type": "array"
                                        },
                                        "type": {
                                            "const": "data",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        }
                    ]
                },
                "error_y": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Partial<Plotly.ErrorOptions>"
                                },
                                {
                                    "properties": {
                                        "type": {
                                            "enum": [
                                                "constant",
                                                "percent"
                                            ],
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "number"
                                        },
                                        "valueminus": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        },
                        {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Partial<Plotly.ErrorOptions>"
                                },
                                {
                                    "properties": {
                                        "array": {
                                            "items": {
                                                "$ref": "#/definitions/Plotly.Datum"
                                            },
                                            "type": "array"
                                        },
                                        "arrayminus": {
                                            "items": {
                                                "$ref": "#/definitions/Plotly.Datum"
                                            },
                                            "type": "array"
                                        },
                                        "type": {
                                            "const": "data",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        }
                    ]
                },
                "extend_to_present": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "fill": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "enum": [
                                "none",
                                "tonext",
                                "tonextx",
                                "tonexty",
                                "toself",
                                "tozerox",
                                "tozeroy"
                            ],
                            "type": "string"
                        }
                    ]
                },
                "fillcolor": {
                    "type": "string"
                },
                "fillpattern": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "$ref": "#/definitions/Partial<Plotly.Pattern>"
                        }
                    ]
                },
                "filters": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "items": {
                                "anyOf": [
                                    {
                                        "$ref": "#/definitions/Record<string,any>"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "type": "array"
                        }
                    ]
                },
                "gauge": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "$ref": "#/definitions/Partial<Plotly.Gauge>"
                        }
                    ]
                },
                "groupnorm": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "enum": [
                                "",
                                "fraction",
                                "percent"
                            ],
                            "type": "string"
                        }
                    ]
                },
                "histfunc": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "enum": [
                                "avg",
                                "count",
                                "max",
                                "min",
                                "sum"
                            ],
                            "type": "string"
                        }
                    ]
                },
                "hole": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "hoverinfo": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "enum": [
                                "all",
                                "name",
                                "none",
                                "skip",
                                "text",
                                "x",
                                "x+name",
                                "x+text",
                                "x+y",
                                "x+y+name",
                                "x+y+text",
                                "x+y+z",
                                "x+y+z+name",
                                "x+y+z+text",
                                "y",
                                "y+name",
                                "y+text",
                                "y+x",
                                "y+x+name",
                                "y+x+text",
                                "y+x+z",
                                "y+x+z+name",
                                "y+x+z+text",
                                "y+z",
                                "y+z+name",
                                "y+z+text",
                                "z",
                                "z+x",
                                "z+x+name",
                                "z+x+text",
                                "z+x+y",
                                "z+x+y+name",
                                "z+x+y+text",
                                "z+y+x",
                                "z+y+x+name",
                                "z+y+x+text"
                            ],
                            "type": "string"
                        }
                    ]
                },
                "hoverlabel": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "$ref": "#/definitions/Partial<Plotly.HoverLabel>"
                        }
                    ]
                },
                "hoveron": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "enum": [
                                "fills",
                                "points"
                            ],
                            "type": "string"
                        }
                    ]
                },
                "hovertemplate": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "hovertext": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "i": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int8Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint8Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint8ClampedArray",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int16Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint16Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Float32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Float64Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    ]
                },
                "ids": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        }
                    ]
                },
                "internal": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "j": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int8Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint8Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint8ClampedArray",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int16Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint16Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Float32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Float64Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    ]
                },
                "jitter": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "k": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int8Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint8Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint8ClampedArray",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int16Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint16Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Float32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Float64Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    ]
                },
                "labels": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/Plotly.Datum"
                            },
                            "type": "array"
                        }
                    ]
                },
                "lat": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/Plotly.Datum"
                            },
                            "type": "array"
                        }
                    ]
                },
                "legendgroup": {
                    "type": "string"
                },
                "level": {
                    "type": "string"
                },
                "line": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "$ref": "#/definitions/Partial<Plotly.ScatterLine>"
                        }
                    ]
                },
                "line.color": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "line.dash": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "enum": [
                                "dash",
                                "dashdot",
                                "dot",
                                "longdash",
                                "longdashdot",
                                "solid"
                            ],
                            "type": "string"
                        }
                    ]
                },
                "line.shape": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "enum": [
                                "hv",
                                "hvh",
                                "linear",
                                "spline",
                                "vh",
                                "vhv"
                            ],
                            "type": "string"
                        }
                    ]
                },
                "line.simplify": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "line.smoothing": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "line.width": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "locationmode": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "enum": [
                                "ISO-3",
                                "USA-states",
                                "country names",
                                "geojson-id"
                            ],
                            "type": "string"
                        }
                    ]
                },
                "locations": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/Plotly.Datum"
                            },
                            "type": "array"
                        }
                    ]
                },
                "lon": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/Plotly.Datum"
                            },
                            "type": "array"
                        }
                    ]
                },
                "marker": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "$ref": "#/definitions/Partial<Plotly.PlotMarker>"
                        },
                        {
                            "$ref": "#/definitions/Partial<BoxPlotMarker>"
                        }
                    ]
                },
                "marker.color": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "marker.colorbar": {
                    "anyOf": [
                        {
                            "properties": {},
                            "type": "object"
                        },
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        }
                    ]
                },
                "marker.colorscale": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": [
                                    {
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ],
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/Plotly.ColorScale"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "marker.line": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "$ref": "#/definitions/Partial<Plotly.ScatterMarkerLine>"
                        }
                    ]
                },
                "marker.line.color": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "null",
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": [
                                        "null",
                                        "string",
                                        "number"
                                    ]
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "marker.line.colorscale": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": [
                                    {
                                        "type": "number"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ],
                                "maxItems": 2,
                                "minItems": 2,
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/Plotly.ColorScale"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "marker.maxdisplayed": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "marker.opacity": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "number"
                            },
                            "type": "array"
                        },
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "marker.pad.b": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "marker.pad.l": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "marker.pad.r": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "marker.pad.t": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "marker.showscale": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "marker.size": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "number"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "type": "number"
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "marker.sizemax": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "marker.sizemin": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "marker.sizemode": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "enum": [
                                "area",
                                "diameter"
                            ],
                            "type": "string"
                        }
                    ]
                },
                "marker.sizeref": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "marker.symbol": {
                    "anyOf": [
                        {
                            "items": {
                                "type": [
                                    "string",
                                    "number"
                                ]
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/Plotly.MarkerSymbol"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "string",
                                "number"
                            ]
                        }
                    ]
                },
                "mode": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "enum": [
                                "delta",
                                "gauge",
                                "gauge+delta",
                                "gauge+number",
                                "gauge+number+delta",
                                "lines",
                                "lines+markers",
                                "markers",
                                "none",
                                "number",
                                "number+delta",
                                "text",
                                "text+lines",
                                "text+lines+markers",
                                "text+markers"
                            ],
                            "type": "string"
                        }
                    ]
                },
                "name": {
                    "type": "string"
                },
                "ncontours": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "number": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "$ref": "#/definitions/Partial<Plotly.PlotNumber>"
                        }
                    ]
                },
                "offset": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        }
                    ]
                },
                "on_click": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Function"
                        },
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        }
                    ]
                },
                "on_legend_click": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Function"
                        },
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        }
                    ]
                },
                "on_legend_dblclick": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/Function"
                        },
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        }
                    ]
                },
                "opacity": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "orientation": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "enum": [
                                "h",
                                "v"
                            ],
                            "type": "string"
                        }
                    ]
                },
                "parents": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        }
                    ]
                },
                "period": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/AutoPeriodConfig"
                        },
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "enum": [
                                "5minute",
                                "auto",
                                "day",
                                "hour",
                                "month",
                                "week"
                            ],
                            "type": "string"
                        }
                    ]
                },
                "pointpos": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "r": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/Plotly.Datum"
                            },
                            "type": "array"
                        }
                    ]
                },
                "reversescale": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "rotation": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "selectedpoints": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/Plotly.Datum"
                            },
                            "type": "array"
                        }
                    ]
                },
                "show_value": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "properties": {
                                "right_margin": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "showlegend": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "showscale": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "stackgaps": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "enum": [
                                "infer zero",
                                "interpolate"
                            ],
                            "type": "string"
                        }
                    ]
                },
                "stackgroup": {
                    "type": "string"
                },
                "statistic": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "enum": [
                                "max",
                                "mean",
                                "min",
                                "state",
                                "sum"
                            ],
                            "type": "string"
                        }
                    ]
                },
                "text": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "textfont": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "$ref": "#/definitions/Partial<Plotly.Font>"
                        }
                    ]
                },
                "textinfo": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "enum": [
                                "label",
                                "label+percent",
                                "label+text",
                                "label+text+percent",
                                "label+text+value",
                                "label+value",
                                "label+value+percent",
                                "none",
                                "percent",
                                "text",
                                "text+percent",
                                "text+value",
                                "text+value+percent",
                                "value",
                                "value+percent"
                            ],
                            "type": "string"
                        }
                    ]
                },
                "textposition": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "enum": [
                                "auto",
                                "bottom center",
                                "bottom left",
                                "bottom right",
                                "inside",
                                "middle center",
                                "middle left",
                                "middle right",
                                "none",
                                "outside",
                                "top center",
                                "top left",
                                "top right"
                            ],
                            "type": "string"
                        }
                    ]
                },
                "texttemplate": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "theta": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/Plotly.Datum"
                            },
                            "type": "array"
                        }
                    ]
                },
                "title": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "$ref": "#/definitions/Partial<Plotly.DataTitle>"
                        }
                    ]
                },
                "transforms": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/Partial<Plotly.Transform>"
                            },
                            "type": "array"
                        }
                    ]
                },
                "transpose": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "boolean"
                        }
                    ]
                },
                "type": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "enum": [
                                "bar",
                                "barpolar",
                                "box",
                                "candlestick",
                                "carpet",
                                "choropleth",
                                "choroplethmapbox",
                                "cone",
                                "contour",
                                "contourcarpet",
                                "densitymapbox",
                                "funnel",
                                "funnelarea",
                                "heatmap",
                                "heatmapgl",
                                "histogram",
                                "histogram2d",
                                "histogram2dcontour",
                                "image",
                                "indicator",
                                "isosurface",
                                "mesh3d",
                                "ohlc",
                                "parcats",
                                "parcoords",
                                "pie",
                                "pointcloud",
                                "sankey",
                                "scatter",
                                "scatter3d",
                                "scattercarpet",
                                "scattergeo",
                                "scattergl",
                                "scattermapbox",
                                "scatterpolar",
                                "scatterpolargl",
                                "scatterternary",
                                "splom",
                                "streamtube",
                                "sunburst",
                                "surface",
                                "table",
                                "treemap",
                                "violin",
                                "volume",
                                "waterfall"
                            ],
                            "type": "string"
                        }
                    ]
                },
                "unit_of_measurement": {
                    "type": "string"
                },
                "value": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "values": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/Plotly.Datum"
                            },
                            "type": "array"
                        }
                    ]
                },
                "visible": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "enum": [
                                false,
                                "legendonly",
                                true
                            ]
                        }
                    ]
                },
                "width": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "number"
                            },
                            "type": "array"
                        },
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "x": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/Plotly.Datum"
                            },
                            "type": "array"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int8Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint8Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint8ClampedArray",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int16Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint16Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Float32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Float64Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "items": {
                                "items": {
                                    "$ref": "#/definitions/Plotly.Datum"
                                },
                                "type": "array"
                            },
                            "type": "array"
                        }
                    ]
                },
                "xaxis": {
                    "type": "string"
                },
                "xbins": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "properties": {
                                "end": {
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "size": {
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "start": {
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "type": "object"
                        }
                    ]
                },
                "xgap": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "xhoverformat": {
                    "type": "string"
                },
                "xy": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Float32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    ]
                },
                "y": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/Plotly.Datum"
                            },
                            "type": "array"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int8Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint8Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint8ClampedArray",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int16Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint16Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Float32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Float64Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "items": {
                                "items": {
                                    "$ref": "#/definitions/Plotly.Datum"
                                },
                                "type": "array"
                            },
                            "type": "array"
                        }
                    ]
                },
                "yaxis": {
                    "type": "string"
                },
                "ygap": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "yhoverformat": {
                    "type": "string"
                },
                "z": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/Plotly.Datum"
                            },
                            "type": "array"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int8Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint8Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint8ClampedArray",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int16Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint16Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Int32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Uint32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Float32Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[0-9]+$": {
                                    "type": "number"
                                }
                            },
                            "properties": {
                                "BYTES_PER_ELEMENT": {
                                    "type": "number"
                                },
                                "__@toStringTag@910": {
                                    "const": "Float64Array",
                                    "type": "string"
                                },
                                "buffer": {
                                    "$ref": "#/definitions/ArrayBufferLike"
                                },
                                "byteLength": {
                                    "type": "number"
                                },
                                "byteOffset": {
                                    "type": "number"
                                },
                                "length": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "items": {
                                "items": {
                                    "$ref": "#/definitions/Plotly.Datum"
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        {
                            "items": {
                                "items": {
                                    "items": {
                                        "$ref": "#/definitions/Plotly.Datum"
                                    },
                                    "type": "array"
                                },
                                "type": "array"
                            },
                            "type": "array"
                        }
                    ]
                },
                "zmax": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "zmin": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                },
                "zsmooth": {
                    "anyOf": [
                        {
                            "pattern": "^\\$ex .*$",
                            "type": "string"
                        },
                        {
                            "pattern": "^\\$fn .*$",
                            "type": "string"
                        },
                        {
                            "enum": [
                                "best",
                                false,
                                "fast"
                            ]
                        }
                    ]
                }
            },
            "type": "object"
        },
        "{table?:Partial<Plotly.PlotData>[]|undefined;image?:Partial<Plotly.PlotData>[]|undefined;bar?:Partial<Plotly.PlotData>[]|undefined;barpolar?:Partial<Plotly.PlotData>[]|undefined;box?:Partial<Plotly.PlotData>[]|undefined;candlestick?:Partial<Plotly.PlotData>[]|undefined;carpet?:Partial<Plotly.PlotData>[]|undefined;choropleth?:Partial<Plotly.PlotData>[]|undefined;choroplethmapbox?:Partial<Plotly.PlotData>[]|undefined;cone?:Partial<Plotly.PlotData>[]|undefined;contour?:Partial<Plotly.PlotData>[]|undefined;contourcarpet?:Partial<Plotly.PlotData>[]|undefined;densitymapbox?:Partial<Plotly.PlotData>[]|undefined;funnel?:Partial<Plotly.PlotData>[]|undefined;funnelarea?:Partial<Plotly.PlotData>[]|undefined;heatmap?:Partial<Plotly.PlotData>[]|undefined;heatmapgl?:Partial<Plotly.PlotData>[]|undefined;histogram?:Partial<Plotly.PlotData>[]|undefined;histogram2d?:Partial<Plotly.PlotData>[]|undefined;histogram2dcontour?:Partial<Plotly.PlotData>[]|undefined;indicator?:Partial<Plotly.PlotData>[]|undefined;isosurface?:Partial<Plotly.PlotData>[]|undefined;mesh3d?:Partial<Plotly.PlotData>[]|undefined;ohlc?:Partial<Plotly.PlotData>[]|undefined;parcats?:Partial<Plotly.PlotData>[]|undefined;parcoords?:Partial<Plotly.PlotData>[]|undefined;pie?:Partial<Plotly.PlotData>[]|undefined;pointcloud?:Partial<Plotly.PlotData>[]|undefined;sankey?:Partial<Plotly.PlotData>[]|undefined;scatter?:Partial<Plotly.PlotData>[]|undefined;scatter3d?:Partial<Plotly.PlotData>[]|undefined;scattercarpet?:Partial<Plotly.PlotData>[]|undefined;scattergeo?:Partial<Plotly.PlotData>[]|undefined;scattergl?:Partial<Plotly.PlotData>[]|undefined;scattermapbox?:Partial<Plotly.PlotData>[]|undefined;scatterpolar?:Partial<Plotly.PlotData>[]|undefined;scatterpolargl?:Partial<Plotly.PlotData>[]|undefined;scatterternary?:Partial<Plotly.PlotData>[]|undefined;splom?:Partial<Plotly.PlotData>[]|undefined;streamtube?:Partial<Plotly.PlotData>[]|undefined;sunburst?:Partial<Plotly.PlotData>[]|undefined;surface?:Partial<Plotly.PlotData>[]|undefined;treemap?:Partial<Plotly.PlotData>[]|undefined;violin?:Partial<Plotly.PlotData>[]|undefined;volume?:Partial<Plotly.PlotData>[]|undefined;waterfall?:Partial<Plotly.PlotData>[]|undefined;}": {
            "properties": {
                "bar": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "barpolar": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "box": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "candlestick": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "carpet": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "choropleth": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "choroplethmapbox": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "cone": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "contour": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "contourcarpet": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "densitymapbox": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "funnel": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "funnelarea": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "heatmap": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "heatmapgl": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "histogram": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "histogram2d": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "histogram2dcontour": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "image": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "indicator": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "isosurface": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "mesh3d": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "ohlc": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "parcats": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "parcoords": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "pie": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "pointcloud": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "sankey": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "scatter": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "scatter3d": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "scattercarpet": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "scattergeo": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "scattergl": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "scattermapbox": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "scatterpolar": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "scatterpolargl": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "scatterternary": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "splom": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "streamtube": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "sunburst": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "surface": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "table": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "treemap": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "violin": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "volume": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                },
                "waterfall": {
                    "items": {
                        "$ref": "#/definitions/Partial<Plotly.PlotData>"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        }
    },
    "properties": {
        "autorange_after_scroll": {
            "anyOf": [
                {
                    "pattern": "^\\$ex .*$",
                    "type": "string"
                },
                {
                    "pattern": "^\\$fn .*$",
                    "type": "string"
                },
                {
                    "type": "boolean"
                }
            ]
        },
        "color_scheme": {
            "anyOf": [
                {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                {
                    "pattern": "^\\$ex .*$",
                    "type": "string"
                },
                {
                    "pattern": "^\\$fn .*$",
                    "type": "string"
                },
                {
                    "enum": [
                        "accent",
                        "black_to_pink",
                        "blue_to_red",
                        "blue_to_yellow",
                        "category10",
                        "category20",
                        "category20b",
                        "category20c",
                        "dark2",
                        "dutch_field",
                        "grey_to_red",
                        "orange_to_purple",
                        "paired",
                        "pastel1",
                        "pastel2",
                        "pink_foam",
                        "retro_metro",
                        "river_nights",
                        "salmon_to_aqua",
                        "set1",
                        "set2",
                        "set3",
                        "spring_pastels",
                        "tableau10",
                        "tableau20"
                    ],
                    "type": "string"
                },
                {
                    "type": "number"
                }
            ]
        },
        "config": {
            "anyOf": [
                {
                    "pattern": "^\\$ex .*$",
                    "type": "string"
                },
                {
                    "pattern": "^\\$fn .*$",
                    "type": "string"
                },
                {
                    "$ref": "#/definitions/Partial<Plotly.Config>"
                }
            ]
        },
        "defaults": {
            "anyOf": [
                {
                    "pattern": "^\\$ex .*$",
                    "type": "string"
                },
                {
                    "pattern": "^\\$fn .*$",
                    "type": "string"
                },
                {
                    "properties": {
                        "entity": {
                            "$ref": "#/definitions/Partial<Plotly.PlotData>"
                        },
                        "yaxes": {
                            "$ref": "#/definitions/Partial<Partial<Plotly.LayoutAxis>>"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "disable_pinch_to_zoom": {
            "anyOf": [
                {
                    "pattern": "^\\$ex .*$",
                    "type": "string"
                },
                {
                    "pattern": "^\\$fn .*$",
                    "type": "string"
                },
                {
                    "type": "boolean"
                }
            ]
        },
        "entities": {
            "anyOf": [
                {
                    "pattern": "^\\$ex .*$",
                    "type": "string"
                },
                {
                    "pattern": "^\\$fn .*$",
                    "type": "string"
                },
                {
                    "items": {
                        "$ref": "#/definitions/With$fn<{entity?:string|undefined;attribute?:string|undefined;statistic?:\"state\"|\"sum\"|\"min\"|\"max\"|\"mean\"|undefined;period?:\"5minute\"|\"hour\"|\"day\"|\"week\"|\"month\"|AutoPeriodConfig|\"auto\"|undefined;unit_of_measurement?:string|undefined;internal?:boolean|undefined;show_value?:boolean|{right_margin:number;}|undefined;offset?:TimeDurationStr|undefined;extend_to_present?:boolean|undefined;filters?:(string|Record<string,any>)[]|undefined;on_legend_click?:Function|undefined;on_legend_dblclick?:Function|undefined;on_click?:Function|undefined;}&Partial<Plotly.PlotData>>"
                    },
                    "type": "array"
                }
            ]
        },
        "ha_theme": {
            "anyOf": [
                {
                    "pattern": "^\\$ex .*$",
                    "type": "string"
                },
                {
                    "pattern": "^\\$fn .*$",
                    "type": "string"
                },
                {
                    "type": "boolean"
                }
            ]
        },
        "hours_to_show": {
            "anyOf": [
                {
                    "pattern": "^\\$ex .*$",
                    "type": "string"
                },
                {
                    "pattern": "^\\$fn .*$",
                    "type": "string"
                },
                {
                    "type": "number"
                }
            ]
        },
        "layout": {
            "anyOf": [
                {
                    "pattern": "^\\$ex .*$",
                    "type": "string"
                },
                {
                    "pattern": "^\\$fn .*$",
                    "type": "string"
                },
                {
                    "$ref": "#/definitions/Partial<Plotly.Layout>"
                }
            ]
        },
        "minimal_response": {
            "anyOf": [
                {
                    "pattern": "^\\$ex .*$",
                    "type": "string"
                },
                {
                    "pattern": "^\\$fn .*$",
                    "type": "string"
                },
                {
                    "type": "boolean"
                }
            ]
        },
        "offset": {
            "anyOf": [
                {
                    "pattern": "^[0-9]*s$",
                    "type": "string"
                },
                {
                    "pattern": "^[0-9]*ms$",
                    "type": "string"
                },
                {
                    "pattern": "^[0-9]*m$",
                    "type": "string"
                },
                {
                    "pattern": "^[0-9]*h$",
                    "type": "string"
                },
                {
                    "pattern": "^[0-9]*d$",
                    "type": "string"
                },
                {
                    "pattern": "^[0-9]*w$",
                    "type": "string"
                },
                {
                    "pattern": "^[0-9]*M$",
                    "type": "string"
                },
                {
                    "pattern": "^[0-9]*y$",
                    "type": "string"
                },
                {
                    "pattern": "^\\$ex .*$",
                    "type": "string"
                },
                {
                    "pattern": "^\\$fn .*$",
                    "type": "string"
                },
                {
                    "const": "0",
                    "type": "string"
                }
            ]
        },
        "on_dblclick": {
            "anyOf": [
                {
                    "$ref": "#/definitions/Function"
                },
                {
                    "pattern": "^\\$ex .*$",
                    "type": "string"
                },
                {
                    "pattern": "^\\$fn .*$",
                    "type": "string"
                }
            ]
        },
        "raw_plotly_config": {
            "anyOf": [
                {
                    "pattern": "^\\$ex .*$",
                    "type": "string"
                },
                {
                    "pattern": "^\\$fn .*$",
                    "type": "string"
                },
                {
                    "type": "boolean"
                }
            ]
        },
        "refresh_interval": {
            "anyOf": [
                {
                    "pattern": "^\\$ex .*$",
                    "type": "string"
                },
                {
                    "pattern": "^\\$fn .*$",
                    "type": "string"
                },
                {
                    "const": "auto",
                    "type": "string"
                },
                {
                    "type": "number"
                }
            ]
        },
        "significant_changes_only": {
            "anyOf": [
                {
                    "pattern": "^\\$ex .*$",
                    "type": "string"
                },
                {
                    "pattern": "^\\$fn .*$",
                    "type": "string"
                },
                {
                    "type": "boolean"
                }
            ]
        },
        "title": {
            "type": "string"
        },
        "type": {
            "anyOf": [
                {
                    "pattern": "^\\$ex .*$",
                    "type": "string"
                },
                {
                    "pattern": "^\\$fn .*$",
                    "type": "string"
                },
                {
                    "const": "custom:plotly-graph-card",
                    "type": "string"
                }
            ]
        }
    },
    "type": "object"
}

